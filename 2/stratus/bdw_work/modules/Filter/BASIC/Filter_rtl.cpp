// Generated by stratus_hls 21.20-p100  (96289.240513)
// Mon May 15 09:40:13 2023
// from ../Filter.cpp
#include "Filter_rtl.h"

struct Filter;
Filter::Filter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_result_busy("o_result_busy")
    ,o_result_vld("o_result_vld")
    ,o_result_data("o_result_data")
    ,o_result_m_req_m_prev_trig_req("o_result_m_req_m_prev_trig_req")
    ,Filter_Xor_1Ux1U_1U_1_1_out1("Filter_Xor_1Ux1U_1U_1_1_out1")
    ,o_result_m_unacked_req("o_result_m_unacked_req")
    ,Filter_Or_1Ux1U_1U_4_2_out1("Filter_Or_1Ux1U_1U_4_2_out1")
    ,Filter_N_Muxb_1_2_2_4_4_out1("Filter_N_Muxb_1_2_2_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,Filter_gen_busy_r_4_196_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next("Filter_gen_busy_r_4_196_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next")
    ,Filter_gen_busy_r_4_196_gdiv("Filter_gen_busy_r_4_196_gdiv")
    ,Filter_gen_busy_r_4_196_gnew_req("Filter_gen_busy_r_4_196_gnew_req")
    ,global_state_next("global_state_next")
    ,Filter_Div_11Ux3U_11U_4_191_in2("Filter_Div_11Ux3U_11U_4_191_in2")
    ,Filter_Sub_12Ux8U_12U_4_190_out1("Filter_Sub_12Ux8U_12U_4_190_out1")
    ,Filter_N_Mux_9_2_1_4_187_in2("Filter_N_Mux_9_2_1_4_187_in2")
    ,Filter_Equal_4Ux3U_1U_4_185_out1("Filter_Equal_4Ux3U_1U_4_185_out1")
    ,Filter_Equal_4Ux3U_1U_4_182_in2("Filter_Equal_4Ux3U_1U_4_182_in2")
    ,gs_ctrl_do_filter_h200000000000("gs_ctrl_do_filter_h200000000000")
    ,Filter_LessThan_8Ux8U_1U_4_158_out1("Filter_LessThan_8Ux8U_1U_4_158_out1")
    ,Filter_N_Mux_8_2_0_4_156_out1("Filter_N_Mux_8_2_0_4_156_out1")
    ,Filter_LessThan_8Ux8U_1U_4_154_out1("Filter_LessThan_8Ux8U_1U_4_154_out1")
    ,Filter_N_Mux_8_2_0_4_152_out1("Filter_N_Mux_8_2_0_4_152_out1")
    ,Filter_LessThan_8Ux8U_1U_4_151_out1("Filter_LessThan_8Ux8U_1U_4_151_out1")
    ,Filter_N_Mux_8_2_0_4_149_out1("Filter_N_Mux_8_2_0_4_149_out1")
    ,Filter_LessThan_8Ux8U_1U_4_148_out1("Filter_LessThan_8Ux8U_1U_4_148_out1")
    ,Filter_N_Mux_8_2_0_4_146_out1("Filter_N_Mux_8_2_0_4_146_out1")
    ,Filter_LessThan_8Ux8U_1U_4_144_out1("Filter_LessThan_8Ux8U_1U_4_144_out1")
    ,Filter_N_Mux_8_2_0_4_141_out1("Filter_N_Mux_8_2_0_4_141_out1")
    ,Filter_LessThan_8Ux8U_1U_4_140_out1("Filter_LessThan_8Ux8U_1U_4_140_out1")
    ,Filter_N_Mux_8_2_0_4_139_out1("Filter_N_Mux_8_2_0_4_139_out1")
    ,Filter_LessThan_8Ux8U_1U_4_138_out1("Filter_LessThan_8Ux8U_1U_4_138_out1")
    ,Filter_N_Mux_8_2_0_4_137_out1("Filter_N_Mux_8_2_0_4_137_out1")
    ,Filter_LessThan_8Ux8U_1U_4_136_out1("Filter_LessThan_8Ux8U_1U_4_136_out1")
    ,Filter_LessThan_8Ux8U_1U_4_131_out1("Filter_LessThan_8Ux8U_1U_4_131_out1")
    ,Filter_N_Mux_8_2_0_4_130_out1("Filter_N_Mux_8_2_0_4_130_out1")
    ,Filter_N_Mux_8_2_0_4_129_out1("Filter_N_Mux_8_2_0_4_129_out1")
    ,Filter_LessThan_8Ux8U_1U_4_128_out1("Filter_LessThan_8Ux8U_1U_4_128_out1")
    ,Filter_N_Mux_8_2_0_4_126_out1("Filter_N_Mux_8_2_0_4_126_out1")
    ,Filter_N_Mux_8_2_0_4_125_out1("Filter_N_Mux_8_2_0_4_125_out1")
    ,Filter_LessThan_8Ux8U_1U_4_123_out1("Filter_LessThan_8Ux8U_1U_4_123_out1")
    ,Filter_N_Mux_8_2_0_4_121_out1("Filter_N_Mux_8_2_0_4_121_out1")
    ,Filter_N_Mux_8_2_0_4_120_out1("Filter_N_Mux_8_2_0_4_120_out1")
    ,Filter_LessThan_8Ux8U_1U_4_119_out1("Filter_LessThan_8Ux8U_1U_4_119_out1")
    ,Filter_N_Mux_8_2_0_4_118_out1("Filter_N_Mux_8_2_0_4_118_out1")
    ,Filter_N_Mux_8_2_0_4_117_out1("Filter_N_Mux_8_2_0_4_117_out1")
    ,Filter_LessThan_8Ux8U_1U_4_115_out1("Filter_LessThan_8Ux8U_1U_4_115_out1")
    ,Filter_LessThan_8Ux8U_1U_4_114_out1("Filter_LessThan_8Ux8U_1U_4_114_out1")
    ,Filter_N_Mux_8_2_0_4_112_out1("Filter_N_Mux_8_2_0_4_112_out1")
    ,Filter_N_Mux_8_2_0_4_111_out1("Filter_N_Mux_8_2_0_4_111_out1")
    ,Filter_N_Mux_8_2_0_4_110_out1("Filter_N_Mux_8_2_0_4_110_out1")
    ,Filter_N_Mux_8_2_0_4_109_out1("Filter_N_Mux_8_2_0_4_109_out1")
    ,Filter_LessThan_8Ux8U_1U_4_107_out1("Filter_LessThan_8Ux8U_1U_4_107_out1")
    ,Filter_LessThan_8Ux8U_1U_4_106_out1("Filter_LessThan_8Ux8U_1U_4_106_out1")
    ,Filter_LessThan_8Ux8U_1U_4_105_out1("Filter_LessThan_8Ux8U_1U_4_105_out1")
    ,Filter_LessThan_8Ux8U_1U_4_104_out1("Filter_LessThan_8Ux8U_1U_4_104_out1")
    ,Filter_N_Mux_8_2_0_4_103_out1("Filter_N_Mux_8_2_0_4_103_out1")
    ,Filter_N_Mux_8_2_0_4_102_out1("Filter_N_Mux_8_2_0_4_102_out1")
    ,Filter_N_Mux_8_2_0_4_101_out1("Filter_N_Mux_8_2_0_4_101_out1")
    ,Filter_N_Mux_8_2_0_4_100_out1("Filter_N_Mux_8_2_0_4_100_out1")
    ,Filter_LessThan_8Ux8U_1U_4_99_out1("Filter_LessThan_8Ux8U_1U_4_99_out1")
    ,Filter_N_Mux_8_2_0_4_98_out1("Filter_N_Mux_8_2_0_4_98_out1")
    ,Filter_N_Mux_8_2_0_4_97_out1("Filter_N_Mux_8_2_0_4_97_out1")
    ,Filter_LessThan_8Ux8U_1U_4_96_out1("Filter_LessThan_8Ux8U_1U_4_96_out1")
    ,Filter_LessThan_8Ux8U_1U_4_95_out1("Filter_LessThan_8Ux8U_1U_4_95_out1")
    ,Filter_N_Mux_8_2_0_4_94_out1("Filter_N_Mux_8_2_0_4_94_out1")
    ,Filter_N_Mux_8_2_0_4_93_out1("Filter_N_Mux_8_2_0_4_93_out1")
    ,Filter_LessThan_8Ux8U_1U_4_92_out1("Filter_LessThan_8Ux8U_1U_4_92_out1")
    ,Filter_LessThan_8Ux8U_1U_4_87_out1("Filter_LessThan_8Ux8U_1U_4_87_out1")
    ,Filter_N_Mux_8_2_0_4_86_out1("Filter_N_Mux_8_2_0_4_86_out1")
    ,Filter_N_Mux_8_2_0_4_85_out1("Filter_N_Mux_8_2_0_4_85_out1")
    ,Filter_LessThan_8Ux8U_1U_4_84_out1("Filter_LessThan_8Ux8U_1U_4_84_out1")
    ,Filter_LessThan_8Ux8U_1U_4_83_out1("Filter_LessThan_8Ux8U_1U_4_83_out1")
    ,Filter_N_Mux_8_2_0_4_82_out1("Filter_N_Mux_8_2_0_4_82_out1")
    ,Filter_N_Mux_8_2_0_4_81_out1("Filter_N_Mux_8_2_0_4_81_out1")
    ,Filter_LessThan_8Ux8U_1U_4_80_out1("Filter_LessThan_8Ux8U_1U_4_80_out1")
    ,Filter_LessThan_8Ux8U_1U_4_74_out1("Filter_LessThan_8Ux8U_1U_4_74_out1")
    ,Filter_LessThan_8Ux8U_1U_4_69_out1("Filter_LessThan_8Ux8U_1U_4_69_out1")
    ,gs_ctrl_do_filter_h1000000("gs_ctrl_do_filter_h1000000")
    ,gs_ctrl_do_filter_h420001000000("gs_ctrl_do_filter_h420001000000")
    ,gs_ctrl_do_filter_h20000000000("gs_ctrl_do_filter_h20000000000")
    ,gs_ctrl_do_filter_h7e0000("gs_ctrl_do_filter_h7e0000")
    ,gs_ctrl_do_filter_h7e00800("gs_ctrl_do_filter_h7e00800")
    ,gs_ctrl_do_filter_h20000("gs_ctrl_do_filter_h20000")
    ,Filter_Add_5Ux5U_5U_4_25_in1("Filter_Add_5Ux5U_5U_4_25_in1")
    ,gs_ctrl_do_filter_h47febffdfb00("gs_ctrl_do_filter_h47febffdfb00")
    ,gs_ctrl_do_filter_h1ff00000540("gs_ctrl_do_filter_h1ff00000540")
    ,gs_ctrl_do_filter_h27ffffbf0540("gs_ctrl_do_filter_h27ffffbf0540")
    ,Filter_NotEQ_2Ux2U_1U_4_28_out1("Filter_NotEQ_2Ux2U_1U_4_28_out1")
    ,Filter_Equal_4Ux3U_1U_4_182_out1("Filter_Equal_4Ux3U_1U_4_182_out1")
    ,gs_ctrl_do_filter_h1ff00000100("gs_ctrl_do_filter_h1ff00000100")
    ,Filter_N_Mux_8_2_0_4_143_out1("Filter_N_Mux_8_2_0_4_143_out1")
    ,gs_ctrl_do_filter_h27ffffbf0500("gs_ctrl_do_filter_h27ffffbf0500")
    ,Filter_NotEQ_4Ux3U_1U_4_183_out1("Filter_NotEQ_4Ux3U_1U_4_183_out1")
    ,Filter_Add_5Ux5U_5U_4_20_out1("Filter_Add_5Ux5U_5U_4_20_out1")
    ,Filter_Equal_2Ux2U_1U_4_18_out1("Filter_Equal_2Ux2U_1U_4_18_out1")
    ,Filter_Add_5Ux5U_5U_4_16_out1("Filter_Add_5Ux5U_5U_4_16_out1")
    ,Filter_Mul_4Ux2U_5U_4_24_in1("Filter_Mul_4Ux2U_5U_4_24_in1")
    ,gs_ctrl_do_filter_h67fffffffb80("gs_ctrl_do_filter_h67fffffffb80")
    ,Filter_Mul_4Ux2U_5U_4_24_in2("Filter_Mul_4Ux2U_5U_4_24_in2")
    ,gs_ctrl_do_filter_h7e0080("gs_ctrl_do_filter_h7e0080")
    ,Filter_Add_3Ux2U_4U_4_12_in2("Filter_Add_3Ux2U_4U_4_12_in2")
    ,Filter_Equal_2Ux2U_1U_4_11_in2("Filter_Equal_2Ux2U_1U_4_11_in2")
    ,gs_ctrl_do_filter_h200("gs_ctrl_do_filter_h200")
    ,gs_ctrl_do_filter_h1c("gs_ctrl_do_filter_h1c")
    ,gs_ctrl_do_filter_ha3c("gs_ctrl_do_filter_ha3c")
    ,gs_ctrl_do_filter_h18("gs_ctrl_do_filter_h18")
    ,gs_ctrl_do_filter_ha18("gs_ctrl_do_filter_ha18")
    ,gs_ctrl_do_filter_h8100000000a01("gs_ctrl_do_filter_h8100000000a01")
    ,gs_ctrl_do_filter_h9d20000000a01("gs_ctrl_do_filter_h9d20000000a01")
    ,gs_ctrl_do_filter_h100000000000("gs_ctrl_do_filter_h100000000000")
    ,Filter_Div_11Ux3U_11U_4_191_out1("Filter_Div_11Ux3U_11U_4_191_out1")
    ,gs_ctrl_do_filter_h1d00000000a00("gs_ctrl_do_filter_h1d00000000a00")
    ,Filter_LessThan_2Ux2U_1U_4_193_out1("Filter_LessThan_2Ux2U_1U_4_193_out1")
    ,Filter_Mul_2Ux2U_4U_4_6_out1("Filter_Mul_2Ux2U_4U_4_6_out1")
    ,Filter_Mul_2Ux2U_4U_4_6_in2("Filter_Mul_2Ux2U_4U_4_6_in2")
    ,gs_ctrl_do_filter_ha44("gs_ctrl_do_filter_ha44")
    ,Filter_Add_4Ux2U_5U_4_21_out1("Filter_Add_4Ux2U_5U_4_21_out1")
    ,Filter_Add_4Ux2U_5U_4_9_out1("Filter_Add_4Ux2U_5U_4_9_out1")
    ,s_reg_9("s_reg_9")
    ,Filter_Add_2Ux1U_2U_4_192_out1("Filter_Add_2Ux1U_2U_4_192_out1")
    ,Filter_LessThan_4Ux4U_1U_4_188_out1("Filter_LessThan_4Ux4U_1U_4_188_out1")
    ,Filter_LessThan_2Ux2U_1U_4_178_out1("Filter_LessThan_2Ux2U_1U_4_178_out1")
    ,Filter_Add_2Ux1U_2U_4_175_out1("Filter_Add_2Ux1U_2U_4_175_out1")
    ,Filter_Add_2Ux1U_2U_4_10_out1("Filter_Add_2Ux1U_2U_4_10_out1")
    ,s_reg_8("s_reg_8")
    ,s_reg_6("s_reg_6")
    ,Filter_N_Mux_8_2_0_4_160_out1("Filter_N_Mux_8_2_0_4_160_out1")
    ,Filter_N_Mux_8_2_0_4_135_out1("Filter_N_Mux_8_2_0_4_135_out1")
    ,Filter_N_Mux_8_2_0_4_76_out1("Filter_N_Mux_8_2_0_4_76_out1")
    ,s_reg_50("s_reg_50")
    ,Filter_N_Mux_8_2_0_4_159_out1("Filter_N_Mux_8_2_0_4_159_out1")
    ,Filter_N_Mux_8_2_0_4_134_out1("Filter_N_Mux_8_2_0_4_134_out1")
    ,Filter_N_Mux_8_2_0_4_75_out1("Filter_N_Mux_8_2_0_4_75_out1")
    ,s_reg_49("s_reg_49")
    ,Filter_N_Mux_8_2_0_4_155_out1("Filter_N_Mux_8_2_0_4_155_out1")
    ,Filter_N_Mux_8_2_0_4_132_out1("Filter_N_Mux_8_2_0_4_132_out1")
    ,Filter_N_Mux_8_2_0_4_91_out1("Filter_N_Mux_8_2_0_4_91_out1")
    ,s_reg_42("s_reg_42")
    ,Filter_N_Mux_8_2_0_4_153_out1("Filter_N_Mux_8_2_0_4_153_out1")
    ,Filter_N_Mux_8_2_0_4_127_out1("Filter_N_Mux_8_2_0_4_127_out1")
    ,Filter_N_Mux_8_2_0_4_90_out1("Filter_N_Mux_8_2_0_4_90_out1")
    ,s_reg_41("s_reg_41")
    ,Filter_Add_12Ux9U_12U_4_189_out1("Filter_Add_12Ux9U_12U_4_189_out1")
    ,Filter_N_Mux_8_2_0_4_147_out1("Filter_N_Mux_8_2_0_4_147_out1")
    ,Filter_N_Mux_8_2_0_4_122_out1("Filter_N_Mux_8_2_0_4_122_out1")
    ,Filter_N_Mux_8_2_0_4_71_out1("Filter_N_Mux_8_2_0_4_71_out1")
    ,Filter_N_Mux_9_2_1_4_187_out1("Filter_N_Mux_9_2_1_4_187_out1")
    ,Filter_N_Mux_8_2_0_4_70_out1("Filter_N_Mux_8_2_0_4_70_out1")
    ,s_reg_33("s_reg_33")
    ,Filter_N_Mux_8_2_0_4_145_out1("Filter_N_Mux_8_2_0_4_145_out1")
    ,Filter_N_Mux_8_2_0_4_116_out1("Filter_N_Mux_8_2_0_4_116_out1")
    ,Filter_N_Mux_8_2_0_4_157_out1("Filter_N_Mux_8_2_0_4_157_out1")
    ,Filter_N_Mux_8_2_0_4_133_out1("Filter_N_Mux_8_2_0_4_133_out1")
    ,Filter_N_Mux_8_2_0_4_88_out1("Filter_N_Mux_8_2_0_4_88_out1")
    ,s_reg_31("s_reg_31")
    ,Filter_N_Mux_8_2_0_4_150_out1("Filter_N_Mux_8_2_0_4_150_out1")
    ,Filter_N_Mux_8_2_0_4_124_out1("Filter_N_Mux_8_2_0_4_124_out1")
    ,Filter_N_Mux_8_2_0_4_89_out1("Filter_N_Mux_8_2_0_4_89_out1")
    ,Filter_Add_2Ux1U_2U_4_58_out1("Filter_Add_2Ux1U_2U_4_58_out1")
    ,Filter_LessThan_2Ux2U_1U_4_34_out1("Filter_LessThan_2Ux2U_1U_4_34_out1")
    ,Filter_LessThan_2Ux2U_1U_4_33_out1("Filter_LessThan_2Ux2U_1U_4_33_out1")
    ,Filter_Add_4Ux2U_5U_4_7_out1("Filter_Add_4Ux2U_5U_4_7_out1")
    ,s_reg_24("s_reg_24")
    ,Filter_Add_2Ux1U_2U_4_27_out1("Filter_Add_2Ux1U_2U_4_27_out1")
    ,Filter_Add_2Ux1U_2U_4_14_out1("Filter_Add_2Ux1U_2U_4_14_out1")
    ,s_reg_18("s_reg_18")
    ,Filter_Add_5Ux1U_5U_4_186_out1("Filter_Add_5Ux1U_5U_4_186_out1")
    ,Filter_Add_5Ux5U_5U_4_25_out1("Filter_Add_5Ux5U_5U_4_25_out1")
    ,Filter_Add_3Ux2U_4U_4_12_out1("Filter_Add_3Ux2U_4U_4_12_out1")
    ,Filter_Mul_4Ux2U_5U_4_24_out1("Filter_Mul_4Ux2U_5U_4_24_out1")
    ,s_reg_17("s_reg_17")
    ,s_reg_22("s_reg_22")
    ,s_reg_13("s_reg_13")
    ,Filter_Add_2Ux1U_2U_4_32_out1("Filter_Add_2Ux1U_2U_4_32_out1")
    ,Filter_Equal_2Ux2U_1U_4_11_out1("Filter_Equal_2Ux2U_1U_4_11_out1")
    ,s_reg_12("s_reg_12")
    ,s_reg_11_slice("s_reg_11_slice")
    ,Filter_gen_busy_r_4_196_out1("Filter_gen_busy_r_4_196_out1")
    ,Filter_And_1Ux1U_1U_4_194_out1("Filter_And_1Ux1U_1U_4_194_out1")
    ,Filter_Not_1U_1U_1_3_out1("Filter_Not_1U_1U_1_3_out1")
    ,o_result_m_req_m_trig_req("o_result_m_req_m_trig_req")
    ,Filter_Add_2Ux1U_2U_4_22_out1("Filter_Add_2Ux1U_2U_4_22_out1")
    ,Filter_LessThan_2Ux2U_1U_4_26_out1("Filter_LessThan_2Ux2U_1U_4_26_out1")
    ,global_state("global_state")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,s_reg_35("s_reg_35")
    ,s_reg_32("s_reg_32")
    ,stall0("stall0")
    ,box_DIN("box_DIN")
    ,box_CE("box_CE")
    ,box_RW("box_RW")
    ,box_in1("box_in1")
    ,box_out1("box_out1")
    ,center_DIN("center_DIN")
    ,center_CE("center_CE")
    ,center_RW("center_RW")
    ,center_in1("center_in1")
    ,center_out1("center_out1")
    ,color_DIN("color_DIN")
    ,color_CE("color_CE")
    ,color_RW("color_RW")
    ,color_in1("color_in1")
    ,color_out1("color_out1")
    ,data_buffer_DIN("data_buffer_DIN")
    ,data_buffer_CE("data_buffer_CE")
    ,data_buffer_RW("data_buffer_RW")
    ,data_buffer_in1("data_buffer_in1")
    ,data_buffer_out1("data_buffer_out1")
    ,result_DIN("result_DIN")
    ,result_CE("result_CE")
    ,result_RW("result_RW")
    ,result_in1("result_in1")
    ,result_out1("result_out1")
{
  result = new Filter_RAM_3X12_4("result");
  result->DIN(result_DIN);
  result->CE(result_CE);
  result->RW(result_RW);
  result->in1(result_in1);
  result->out1(result_out1);
  result->clk(i_clk);

  data_buffer = new Filter_RAM_18X8_2("data_buffer");
  data_buffer->DIN(data_buffer_DIN);
  data_buffer->CE(data_buffer_CE);
  data_buffer->RW(data_buffer_RW);
  data_buffer->in1(data_buffer_in1);
  data_buffer->out1(data_buffer_out1);
  data_buffer->clk(i_clk);

  color = new Filter_RAM_3X8_1("color");
  color->DIN(color_DIN);
  color->CE(color_CE);
  color->RW(color_RW);
  color->in1(color_in1);
  color->out1(color_out1);
  color->clk(i_clk);

  center = new Filter_RAM_3X8_1("center");
  center->DIN(center_DIN);
  center->CE(center_CE);
  center->RW(center_RW);
  center->in1(center_in1);
  center->out1(center_out1);
  center->clk(i_clk);

  box = new Filter_RAM_27X8_3("box");
  box->DIN(box_DIN);
  box->CE(box_CE);
  box->RW(box_RW);
  box->in1(box_in1);
  box->out1(box_out1);
  box->clk(i_clk);

  SC_METHOD(drive_o_result_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_result_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( Filter_gen_busy_r_4_196_out1 );
  sensitive << ( Filter_And_1Ux1U_1U_4_194_out1 );

  SC_METHOD(drive_s_reg_11_slice);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_12);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_13);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_17);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_18);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_22);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_31);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_32);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_33);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_35);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_41);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_42);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_49);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_50);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_6);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_8);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_9);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_Filter_Mul_2Ux2U_4U_4_6_in2);
  sensitive << ( gs_ctrl_do_filter_ha44 );
  sensitive << ( s_reg_6 );
  sensitive << ( s_reg_18 );

  SC_METHOD(Filter_Mul_2Ux2U_4U_4_6);
  sensitive << ( Filter_Mul_2Ux2U_4U_4_6_in2 );

  SC_METHOD(Filter_Add_4Ux2U_5U_4_7);
  sensitive << ( Filter_Mul_2Ux2U_4U_4_6_out1 );

  SC_METHOD(drive_result_in1);
  sensitive << ( gs_ctrl_do_filter_h1d00000000a00 );
  sensitive << ( s_reg_18 );
  sensitive << ( s_reg_8 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_193_out1 );

  SC_METHOD(drive_result_DIN);
  sensitive << ( gs_ctrl_do_filter_h100000000000 );
  sensitive << ( Filter_Div_11Ux3U_11U_4_191_out1 );

  SC_METHOD(drive_result_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h9d20000000a01 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_34_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_33_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_32_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_26_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_22_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_178_out1 );
  sensitive << ( Filter_LessThan_4Ux4U_1U_4_188_out1 );

  SC_METHOD(drive_result_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h8100000000a01 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_34_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_33_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_32_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_26_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_22_out1 );
  sensitive << ( Filter_LessThan_4Ux4U_1U_4_188_out1 );

  SC_METHOD(Filter_Add_4Ux2U_5U_4_9);
  sensitive << ( s_reg_8 );
  sensitive << ( Filter_Mul_2Ux2U_4U_4_6_out1 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_10);
  sensitive << ( s_reg_8 );

  SC_METHOD(drive_color_in1);
  sensitive << ( gs_ctrl_do_filter_ha18 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_32_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_22_out1 );

  SC_METHOD(drive_color_DIN);
  sensitive << ( gs_ctrl_do_filter_h18 );
  sensitive << ( i_rgb_data );
  sensitive << ( s_reg_11_slice );

  SC_METHOD(drive_color_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_ha3c );
  sensitive << ( s_reg_12 );
  sensitive << ( Filter_Equal_2Ux2U_1U_4_11_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_32_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_33_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_22_out1 );

  SC_METHOD(drive_color_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1c );

  SC_METHOD(drive_Filter_Equal_2Ux2U_1U_4_11_in2);
  sensitive << ( gs_ctrl_do_filter_h200 );
  sensitive << ( s_reg_22 );

  SC_METHOD(Filter_Equal_2Ux2U_1U_4_11);
  sensitive << ( Filter_Equal_2Ux2U_1U_4_11_in2 );

  SC_METHOD(drive_Filter_Add_3Ux2U_4U_4_12_in2);
  sensitive << ( s_reg_6 );

  SC_METHOD(Filter_Add_3Ux2U_4U_4_12);
  sensitive << ( Filter_Equal_2Ux2U_1U_4_11_in2 );
  sensitive << ( Filter_Add_3Ux2U_4U_4_12_in2 );

  SC_METHOD(drive_Filter_Mul_4Ux2U_5U_4_24_in2);
  sensitive << ( gs_ctrl_do_filter_h7e0080 );

  SC_METHOD(drive_Filter_Mul_4Ux2U_5U_4_24_in1);
  sensitive << ( gs_ctrl_do_filter_h67fffffffb80 );
  sensitive << ( s_reg_8 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_32_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_22_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_58_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_178_out1 );

  SC_METHOD(Filter_Mul_4Ux2U_5U_4_24);
  sensitive << ( Filter_Mul_4Ux2U_5U_4_24_in1 );
  sensitive << ( Filter_Mul_4Ux2U_5U_4_24_in2 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_14);
  sensitive << ( s_reg_6 );

  SC_METHOD(Filter_Add_5Ux5U_5U_4_16);
  sensitive << ( s_reg_9 );
  sensitive << ( s_reg_17 );

  SC_METHOD(Filter_Equal_2Ux2U_1U_4_18);
  sensitive << ( s_reg_13 );

  SC_METHOD(Filter_Add_5Ux5U_5U_4_20);
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_17 );

  SC_METHOD(Filter_Add_4Ux2U_5U_4_21);
  sensitive << ( s_reg_13 );
  sensitive << ( Filter_Mul_2Ux2U_4U_4_6_out1 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_22);
  sensitive << ( s_reg_13 );

  SC_METHOD(drive_box_in1);
  sensitive << ( gs_ctrl_do_filter_h27ffffbf0500 );
  sensitive << ( Filter_Add_5Ux5U_5U_4_20_out1 );
  sensitive << ( Filter_Add_5Ux5U_5U_4_25_out1 );
  sensitive << ( Filter_Add_5Ux5U_5U_4_16_out1 );
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_9 );
  sensitive << ( s_reg_17 );
  sensitive << ( s_reg_31 );
  sensitive << ( s_reg_32 );
  sensitive << ( Filter_Mul_4Ux2U_5U_4_24_out1 );
  sensitive << ( Filter_NotEQ_4Ux3U_1U_4_183_out1 );

  SC_METHOD(drive_box_DIN);
  sensitive << ( gs_ctrl_do_filter_h1ff00000100 );
  sensitive << ( color_out1 );
  sensitive << ( data_buffer_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_143_out1 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_35 );
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_41 );
  sensitive << ( s_reg_42 );
  sensitive << ( s_reg_31 );
  sensitive << ( s_reg_49 );
  sensitive << ( s_reg_50 );

  SC_METHOD(drive_box_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h27ffffbf0540 );
  sensitive << ( Filter_Equal_2Ux2U_1U_4_18_out1 );
  sensitive << ( Filter_NotEQ_2Ux2U_1U_4_28_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_58_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_178_out1 );
  sensitive << ( Filter_NotEQ_4Ux3U_1U_4_183_out1 );
  sensitive << ( s_reg_17 );
  sensitive << ( Filter_Equal_4Ux3U_1U_4_182_out1 );

  SC_METHOD(drive_box_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1ff00000540 );
  sensitive << ( Filter_Equal_2Ux2U_1U_4_18_out1 );
  sensitive << ( Filter_NotEQ_2Ux2U_1U_4_28_out1 );

  SC_METHOD(Filter_NotEQ_2Ux2U_1U_4_28);
  sensitive << ( s_reg_13 );

  SC_METHOD(drive_Filter_Add_5Ux5U_5U_4_25_in1);
  sensitive << ( gs_ctrl_do_filter_h47febffdfb00 );
  sensitive << ( s_reg_17 );
  sensitive << ( s_reg_9 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_58_out1 );

  SC_METHOD(Filter_Add_5Ux5U_5U_4_25);
  sensitive << ( Filter_Add_5Ux5U_5U_4_25_in1 );
  sensitive << ( Filter_Mul_4Ux2U_5U_4_24_out1 );

  SC_METHOD(Filter_LessThan_2Ux2U_1U_4_26);
  sensitive << ( s_reg_8 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_27);
  sensitive << ( s_reg_13 );

  SC_METHOD(drive_data_buffer_in1);
  sensitive << ( gs_ctrl_do_filter_h20000 );
  sensitive << ( Filter_Mul_4Ux2U_5U_4_24_out1 );
  sensitive << ( Filter_Add_5Ux5U_5U_4_25_out1 );

  SC_METHOD(drive_data_buffer_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h7e00800 );
  sensitive << ( Filter_NotEQ_2Ux2U_1U_4_28_out1 );

  SC_METHOD(drive_data_buffer_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h7e0000 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_32);
  sensitive << ( s_reg_8 );

  SC_METHOD(Filter_LessThan_2Ux2U_1U_4_33);
  sensitive << ( s_reg_22 );

  SC_METHOD(Filter_LessThan_2Ux2U_1U_4_34);
  sensitive << ( s_reg_18 );

  SC_METHOD(drive_data_buffer_DIN);
  sensitive << ( box_out1 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_58);
  sensitive << ( s_reg_8 );

  SC_METHOD(drive_center_in1);
  sensitive << ( gs_ctrl_do_filter_h20000000000 );
  sensitive << ( s_reg_8 );

  SC_METHOD(drive_center_DIN);
  sensitive << ( box_out1 );

  SC_METHOD(drive_center_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h420001000000 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_178_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_193_out1 );

  SC_METHOD(drive_center_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1000000 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_69);
  sensitive << ( box_out1 );
  sensitive << ( s_reg_33 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_70);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_69_out1 );
  sensitive << ( s_reg_33 );
  sensitive << ( box_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_71);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_69_out1 );
  sensitive << ( box_out1 );
  sensitive << ( s_reg_33 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_74);
  sensitive << ( box_out1 );
  sensitive << ( s_reg_31 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_75);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_74_out1 );
  sensitive << ( s_reg_31 );
  sensitive << ( box_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_76);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_74_out1 );
  sensitive << ( box_out1 );
  sensitive << ( s_reg_31 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_80);
  sensitive << ( box_out1 );
  sensitive << ( s_reg_31 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_81);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_80_out1 );
  sensitive << ( s_reg_31 );
  sensitive << ( box_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_82);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_80_out1 );
  sensitive << ( box_out1 );
  sensitive << ( s_reg_31 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_83);
  sensitive << ( Filter_N_Mux_8_2_0_4_81_out1 );
  sensitive << ( s_reg_49 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_84);
  sensitive << ( Filter_N_Mux_8_2_0_4_82_out1 );
  sensitive << ( s_reg_50 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_85);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_83_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_81_out1 );
  sensitive << ( s_reg_49 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_86);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_84_out1 );
  sensitive << ( s_reg_50 );
  sensitive << ( Filter_N_Mux_8_2_0_4_82_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_87);
  sensitive << ( Filter_N_Mux_8_2_0_4_85_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_86_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_88);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_83_out1 );
  sensitive << ( s_reg_49 );
  sensitive << ( Filter_N_Mux_8_2_0_4_81_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_89);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_84_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_82_out1 );
  sensitive << ( s_reg_50 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_90);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_87_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_86_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_85_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_91);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_87_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_85_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_86_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_92);
  sensitive << ( s_reg_32 );
  sensitive << ( box_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_93);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_92_out1 );
  sensitive << ( box_out1 );
  sensitive << ( s_reg_32 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_94);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_92_out1 );
  sensitive << ( s_reg_32 );
  sensitive << ( box_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_95);
  sensitive << ( s_reg_33 );
  sensitive << ( Filter_N_Mux_8_2_0_4_93_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_96);
  sensitive << ( s_reg_35 );
  sensitive << ( Filter_N_Mux_8_2_0_4_94_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_97);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_95_out1 );
  sensitive << ( s_reg_33 );
  sensitive << ( Filter_N_Mux_8_2_0_4_93_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_98);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_96_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_94_out1 );
  sensitive << ( s_reg_35 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_99);
  sensitive << ( Filter_N_Mux_8_2_0_4_97_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_98_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_100);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_95_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_93_out1 );
  sensitive << ( s_reg_33 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_101);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_96_out1 );
  sensitive << ( s_reg_35 );
  sensitive << ( Filter_N_Mux_8_2_0_4_94_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_102);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_99_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_98_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_97_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_103);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_99_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_97_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_98_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_104);
  sensitive << ( s_reg_31 );
  sensitive << ( Filter_N_Mux_8_2_0_4_100_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_105);
  sensitive << ( s_reg_42 );
  sensitive << ( Filter_N_Mux_8_2_0_4_103_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_106);
  sensitive << ( s_reg_41 );
  sensitive << ( Filter_N_Mux_8_2_0_4_102_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_107);
  sensitive << ( s_reg_24 );
  sensitive << ( Filter_N_Mux_8_2_0_4_101_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_109);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_104_out1 );
  sensitive << ( s_reg_31 );
  sensitive << ( Filter_N_Mux_8_2_0_4_100_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_110);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_105_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_103_out1 );
  sensitive << ( s_reg_42 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_111);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_106_out1 );
  sensitive << ( s_reg_41 );
  sensitive << ( Filter_N_Mux_8_2_0_4_102_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_112);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_107_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_101_out1 );
  sensitive << ( s_reg_24 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_114);
  sensitive << ( Filter_N_Mux_8_2_0_4_109_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_110_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_115);
  sensitive << ( Filter_N_Mux_8_2_0_4_111_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_112_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_116);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_104_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_100_out1 );
  sensitive << ( s_reg_31 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_117);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_114_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_109_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_110_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_118);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_115_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_112_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_111_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_119);
  sensitive << ( Filter_N_Mux_8_2_0_4_117_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_118_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_120);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_114_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_110_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_109_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_121);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_106_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_102_out1 );
  sensitive << ( s_reg_41 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_122);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_119_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_117_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_118_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_123);
  sensitive << ( Filter_N_Mux_8_2_0_4_120_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_121_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_124);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_123_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_120_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_121_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_125);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_105_out1 );
  sensitive << ( s_reg_42 );
  sensitive << ( Filter_N_Mux_8_2_0_4_103_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_126);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_115_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_111_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_112_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_127);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_123_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_121_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_120_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_128);
  sensitive << ( Filter_N_Mux_8_2_0_4_125_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_126_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_129);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_119_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_118_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_117_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_130);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_128_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_126_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_125_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_131);
  sensitive << ( Filter_N_Mux_8_2_0_4_130_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_129_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_132);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_131_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_129_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_130_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_133);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_128_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_125_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_126_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_134);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_131_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_130_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_129_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_135);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_107_out1 );
  sensitive << ( s_reg_24 );
  sensitive << ( Filter_N_Mux_8_2_0_4_101_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_136);
  sensitive << ( box_out1 );
  sensitive << ( s_reg_32 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_137);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_136_out1 );
  sensitive << ( box_out1 );
  sensitive << ( s_reg_32 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_138);
  sensitive << ( Filter_N_Mux_8_2_0_4_137_out1 );
  sensitive << ( s_reg_35 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_139);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_138_out1 );
  sensitive << ( s_reg_35 );
  sensitive << ( Filter_N_Mux_8_2_0_4_137_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_140);
  sensitive << ( Filter_N_Mux_8_2_0_4_139_out1 );
  sensitive << ( s_reg_24 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_141);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_140_out1 );
  sensitive << ( s_reg_24 );
  sensitive << ( Filter_N_Mux_8_2_0_4_139_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_143);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_136_out1 );
  sensitive << ( s_reg_32 );
  sensitive << ( box_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_144);
  sensitive << ( Filter_N_Mux_8_2_0_4_141_out1 );
  sensitive << ( s_reg_41 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_145);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_144_out1 );
  sensitive << ( s_reg_41 );
  sensitive << ( Filter_N_Mux_8_2_0_4_141_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_146);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_140_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_139_out1 );
  sensitive << ( s_reg_24 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_147);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_144_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_141_out1 );
  sensitive << ( s_reg_41 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_148);
  sensitive << ( Filter_N_Mux_8_2_0_4_146_out1 );
  sensitive << ( s_reg_42 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_149);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_138_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_137_out1 );
  sensitive << ( s_reg_35 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_150);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_148_out1 );
  sensitive << ( s_reg_42 );
  sensitive << ( Filter_N_Mux_8_2_0_4_146_out1 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_151);
  sensitive << ( Filter_N_Mux_8_2_0_4_149_out1 );
  sensitive << ( s_reg_31 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_152);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_151_out1 );
  sensitive << ( s_reg_31 );
  sensitive << ( Filter_N_Mux_8_2_0_4_149_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_153);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_148_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_146_out1 );
  sensitive << ( s_reg_42 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_154);
  sensitive << ( Filter_N_Mux_8_2_0_4_152_out1 );
  sensitive << ( s_reg_49 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_155);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_154_out1 );
  sensitive << ( s_reg_49 );
  sensitive << ( Filter_N_Mux_8_2_0_4_152_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_156);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_151_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_149_out1 );
  sensitive << ( s_reg_31 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_157);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_154_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_152_out1 );
  sensitive << ( s_reg_49 );

  SC_METHOD(Filter_LessThan_8Ux8U_1U_4_158);
  sensitive << ( Filter_N_Mux_8_2_0_4_156_out1 );
  sensitive << ( s_reg_50 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_159);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_158_out1 );
  sensitive << ( s_reg_50 );
  sensitive << ( Filter_N_Mux_8_2_0_4_156_out1 );

  SC_METHOD(Filter_N_Mux_8_2_0_4_160);
  sensitive << ( Filter_LessThan_8Ux8U_1U_4_158_out1 );
  sensitive << ( Filter_N_Mux_8_2_0_4_156_out1 );
  sensitive << ( s_reg_50 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_175);
  sensitive << ( s_reg_8 );

  SC_METHOD(Filter_LessThan_2Ux2U_1U_4_178);
  sensitive << ( s_reg_8 );

  SC_METHOD(drive_Filter_Equal_4Ux3U_1U_4_182_in2);
  sensitive << ( gs_ctrl_do_filter_h200000000000 );
  sensitive << ( s_reg_17 );

  SC_METHOD(Filter_Equal_4Ux3U_1U_4_182);
  sensitive << ( Filter_Equal_4Ux3U_1U_4_182_in2 );

  SC_METHOD(Filter_NotEQ_4Ux3U_1U_4_183);
  sensitive << ( Filter_Equal_4Ux3U_1U_4_182_in2 );

  SC_METHOD(Filter_Equal_4Ux3U_1U_4_185);
  sensitive << ( s_reg_17 );

  SC_METHOD(Filter_Add_5Ux1U_5U_4_186);
  sensitive << ( s_reg_17 );

  SC_METHOD(drive_Filter_N_Mux_9_2_1_4_187_in2);
  sensitive << ( box_out1 );

  SC_METHOD(Filter_N_Mux_9_2_1_4_187);
  sensitive << ( Filter_Equal_4Ux3U_1U_4_185_out1 );
  sensitive << ( Filter_N_Mux_9_2_1_4_187_in2 );
  sensitive << ( box_out1 );

  SC_METHOD(Filter_LessThan_4Ux4U_1U_4_188);
  sensitive << ( s_reg_17 );

  SC_METHOD(Filter_Add_12Ux9U_12U_4_189);
  sensitive << ( s_reg_33 );
  sensitive << ( s_reg_35 );

  SC_METHOD(Filter_Sub_12Ux8U_12U_4_190);
  sensitive << ( s_reg_32 );
  sensitive << ( Filter_Add_12Ux9U_12U_4_189_out1 );

  SC_METHOD(drive_Filter_Div_11Ux3U_11U_4_191_in2);
  sensitive << ( Filter_Sub_12Ux8U_12U_4_190_out1 );

  SC_METHOD(Filter_Div_11Ux3U_11U_4_191);
  sensitive << ( Filter_Div_11Ux3U_11U_4_191_in2 );

  SC_METHOD(Filter_Add_2Ux1U_2U_4_192);
  sensitive << ( s_reg_8 );

  SC_METHOD(Filter_LessThan_2Ux2U_1U_4_193);
  sensitive << ( s_reg_8 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( s_reg_12 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_32_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_33_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_34_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_22_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_26_out1 );
  sensitive << ( Filter_Add_2Ux1U_2U_4_58_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_178_out1 );
  sensitive << ( Filter_LessThan_4Ux4U_1U_4_188_out1 );
  sensitive << ( Filter_LessThan_2Ux2U_1U_4_193_out1 );

  SC_METHOD(drive_gs_ctrl_do_filter_ha44);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1d00000000a00);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h100000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h9d20000000a01);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8100000000a01);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_ha18);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h18);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_ha3c);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1c);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h200);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h7e0080);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h67fffffffb80);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h27ffffbf0500);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1ff00000100);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h27ffffbf0540);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1ff00000540);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h47febffdfb00);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h20000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h7e00800);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h7e0000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h20000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h420001000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h200000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( Filter_gen_busy_r_4_196_out1 );

  SC_METHOD(Filter_gen_busy_r_4_196_p7);
  sensitive << ( 
  Filter_gen_busy_r_4_196_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( Filter_gen_busy_r_4_196_gdiv );
  sensitive << ( Filter_gen_busy_r_4_196_gnew_req );

  SC_METHOD(Filter_gen_busy_r_4_196_p6);
  sensitive << ( Filter_gen_busy_r_4_196_gdiv );

  SC_METHOD(Filter_gen_busy_r_4_196_p5);
  sensitive << ( Filter_gen_busy_r_4_196_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(Filter_gen_busy_r_4_196_p4);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(Filter_N_Muxb_1_2_2_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_o_result_vld);
  sensitive << ( Filter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(Filter_Or_1Ux1U_1U_4_2);
  sensitive << ( Filter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_result_m_unacked_req );

  SC_METHOD(drive_o_result_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(Filter_And_1Ux1U_1U_4_194);
  sensitive << ( o_result_vld );
  sensitive << ( o_result_busy );

  SC_METHOD(Filter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_result_m_req_m_prev_trig_req );
  sensitive << ( o_result_m_req_m_trig_req );

  SC_METHOD(drive_o_result_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(Filter_Not_1U_1U_1_3);
  sensitive << ( o_result_m_req_m_trig_req );

}
// resource: regr_en_24
void Filter::drive_o_result_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    o_result_data = ( (sc_uint<24> )(sc_bv<24>)((sc_bv<8>)((sc_uint<8> )
                    result_out1.read()), 
                    (sc_bv<16>)((sc_bv<8>)((sc_uint<8> )s_reg_35.read()), 
                    (sc_bv<8>)(s_reg_32.read()))) );
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void Filter::drive_i_rgb_m_busy_req_0(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_busy_req_0 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state.read()) ) {
      case 1ULL: 
        i_rgb_m_busy_req_0 = 0ULL;
        break;
      case 2ULL: 
        i_rgb_m_busy_req_0 = 1ULL;
        break;
      case 11ULL: 
        if ( ((3ULL == Filter_Add_2Ux1U_2U_4_22_out1.read()) && 
             Filter_LessThan_2Ux2U_1U_4_26_out1.read()) ) {
          i_rgb_m_busy_req_0 = 0ULL;
        } 
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_1
void Filter::drive_o_result_m_req_m_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_req_m_trig_req = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state.read()) ) {
      case 49ULL: 
        o_result_m_req_m_trig_req = (sc_uint<1> ) (Filter_Not_1U_1U_1_3_out1
                                    .read());
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx3i1c
void Filter::drive_stall0(){
  switch( (sc_uint<6>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 2ULL: 
    stall0 = (sc_uint<1> )Filter_gen_busy_r_4_196_out1.read();
    break;
  case 50ULL: 
    stall0 = Filter_And_1Ux1U_1U_4_194_out1.read();
    break;
  }
}
// resource: regr_en_24
void Filter::drive_s_reg_11_slice(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 2ULL: 
      s_reg_11_slice = (sc_uint<24> )i_rgb_data.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void Filter::drive_s_reg_12(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 2ULL: 
      s_reg_12 = (sc_uint<1> ) (i_rgb_data.read().range(24,24));
      break;
    case 5ULL: 
      s_reg_12 = Filter_Equal_2Ux2U_1U_4_11_out1.read();
      break;
    case 9ULL: 
      if ( (3ULL == Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
        s_reg_12 = Filter_Equal_2Ux2U_1U_4_11_out1.read();
      } 
      break;
    }
    break;
  }
}
// resource: mux_2bx3i1c
// resource: regr_en_2
void Filter::drive_s_reg_13(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 5ULL: 
      s_reg_13 = 0ULL;
      break;
    case 9ULL: 
      if ( (3ULL == Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
        s_reg_13 = s_reg_22.read();
      } 
      break;
    case 11ULL: 
      if ( (3ULL != Filter_Add_2Ux1U_2U_4_22_out1.read()) ) {
        s_reg_13 = Filter_Add_2Ux1U_2U_4_22_out1.read();
      } 
      break;
    }
    break;
  }
}
// resource: mux_5bx6i1c
// resource: regr_en_5
void Filter::drive_s_reg_17(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 5ULL: 
      if ( s_reg_12.read() ) {
        s_reg_17 = Filter_Mul_4Ux2U_5U_4_24_out1.read();
      } else {
        s_reg_17 = (sc_uint<5> ) (Filter_Add_3Ux2U_4U_4_12_out1.read());
      }
      break;
    case 9ULL: 
      switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
      default:
        if ( (s_reg_13.read() != 2ULL) ) {
          s_reg_17 = (sc_uint<5> ) ((sc_uint<4> )s_reg_17.read());
        } else {
          s_reg_17 = Filter_Mul_4Ux2U_5U_4_24_out1.read();
        }
        break;
      case 3ULL: 
        if ( (s_reg_22.read() != 2ULL) ) {
          s_reg_17 = (sc_uint<5> ) (Filter_Add_3Ux2U_4U_4_12_out1.read());
        } else {
          s_reg_17 = Filter_Mul_4Ux2U_5U_4_24_out1.read();
        }
        break;
      }
      break;
    case 11ULL: 
      if ( (3ULL != Filter_Add_2Ux1U_2U_4_22_out1.read()) ) {
        s_reg_17 = Filter_Mul_4Ux2U_5U_4_24_out1.read();
      } 
      break;
    case 13ULL: 
      s_reg_17 = Filter_Add_5Ux5U_5U_4_25_out1.read();
      break;
    case 42ULL: 
      s_reg_17 = 0ULL;
      break;
    case 43ULL: 
      s_reg_17 = (sc_uint<5> ) ((sc_uint<4> )Filter_Add_5Ux1U_5U_4_186_out1
                 .read());
      break;
    case 45ULL: 
      s_reg_17 = (sc_uint<5> ) ((sc_uint<4> )s_reg_17.read());
      break;
    }
    break;
  }
}
// resource: regr_en_2
void Filter::drive_s_reg_18(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 5ULL: case 9ULL: case 10ULL: 
      s_reg_18 = Filter_Add_2Ux1U_2U_4_14_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_2
void Filter::drive_s_reg_22(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_22 = Filter_Add_2Ux1U_2U_4_27_out1.read();
    break;
  }
}
// resource: mux_8bx5i0c
// resource: regr_en_8
void Filter::drive_s_reg_24(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 0ULL: case 51ULL: 
      s_reg_24 = (sc_uint<8> ) (Filter_Add_4Ux2U_5U_4_7_out1.read());
      break;
    case 9ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_32_out1.read()) && !
           Filter_LessThan_2Ux2U_1U_4_33_out1.read()) ) {
        if ( Filter_LessThan_2Ux2U_1U_4_34_out1.read() ) {
          s_reg_24 = (sc_uint<8> ) (Filter_Add_4Ux2U_5U_4_7_out1.read());
        } else {
          s_reg_24 = (sc_uint<8> ) (Filter_Add_5Ux5U_5U_4_25_out1.read());
        }
      } 
      break;
    case 11ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_22_out1.read()) && !
           Filter_LessThan_2Ux2U_1U_4_26_out1.read()) ) {
        if ( Filter_LessThan_2Ux2U_1U_4_34_out1.read() ) {
          s_reg_24 = (sc_uint<8> ) (Filter_Add_4Ux2U_5U_4_7_out1.read());
        } else {
          s_reg_24 = (sc_uint<8> ) (Filter_Add_5Ux5U_5U_4_25_out1.read());
        }
      } 
      break;
    case 16ULL: 
      s_reg_24 = (sc_uint<8> ) (Filter_Add_5Ux5U_5U_4_25_out1.read());
      break;
    case 23ULL: 
      if ( (3ULL != Filter_Add_2Ux1U_2U_4_58_out1.read()) ) {
        s_reg_24 = (sc_uint<8> ) (Filter_Add_5Ux5U_5U_4_25_out1.read());
      } 
      break;
    case 30ULL: 
      s_reg_24 = Filter_N_Mux_8_2_0_4_89_out1.read();
      break;
    case 31ULL: 
      s_reg_24 = Filter_N_Mux_8_2_0_4_124_out1.read();
      break;
    case 32ULL: 
      s_reg_24 = Filter_N_Mux_8_2_0_4_150_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_8bx5i0c
// resource: regr_en_8
void Filter::drive_s_reg_31(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 14ULL: 
      s_reg_31 = (sc_uint<8> ) (Filter_Add_5Ux5U_5U_4_25_out1.read());
      break;
    case 24ULL: case 29ULL: 
      s_reg_31 = box_out1.read();
      break;
    case 30ULL: 
      s_reg_31 = Filter_N_Mux_8_2_0_4_88_out1.read();
      break;
    case 31ULL: 
      s_reg_31 = Filter_N_Mux_8_2_0_4_133_out1.read();
      break;
    case 32ULL: 
      s_reg_31 = Filter_N_Mux_8_2_0_4_157_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_8bx6i0c
// resource: regr_en_8
void Filter::drive_s_reg_32(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 15ULL: 
      s_reg_32 = (sc_uint<8> ) (Filter_Add_5Ux5U_5U_4_25_out1.read());
      break;
    case 25ULL: 
      s_reg_32 = box_out1.read();
      break;
    case 31ULL: 
      s_reg_32 = Filter_N_Mux_8_2_0_4_116_out1.read();
      break;
    case 32ULL: 
      s_reg_32 = Filter_N_Mux_8_2_0_4_145_out1.read();
      break;
    case 42ULL: 
      s_reg_32 = center_out1.read();
      break;
    case 47ULL: 
      s_reg_32 = (sc_uint<8> )result_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_9bx3i0c
// resource: regr_en_9
void Filter::drive_s_reg_33(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 26ULL: 
      s_reg_33 = (sc_uint<9> ) (box_out1.read());
      break;
    case 27ULL: 
      s_reg_33 = (sc_uint<9> ) (Filter_N_Mux_8_2_0_4_70_out1.read());
      break;
    case 43ULL: 
      s_reg_33 = Filter_N_Mux_9_2_1_4_187_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_12bx6i0c
// resource: regr_en_12
void Filter::drive_s_reg_35(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 27ULL: 
      s_reg_35 = (sc_uint<12> ) (Filter_N_Mux_8_2_0_4_71_out1.read());
      break;
    case 31ULL: 
      s_reg_35 = (sc_uint<12> ) (Filter_N_Mux_8_2_0_4_122_out1.read());
      break;
    case 32ULL: 
      s_reg_35 = (sc_uint<12> ) (Filter_N_Mux_8_2_0_4_147_out1.read());
      break;
    case 42ULL: 
      s_reg_35 = result_out1.read();
      break;
    case 44ULL: 
      /* state64 */
      s_reg_35 = Filter_Add_12Ux9U_12U_4_189_out1.read();
      break;
    case 48ULL: 
      s_reg_35 = (sc_uint<12> ) ((sc_uint<8> )result_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_8bx3i0c
// resource: regr_en_8
void Filter::drive_s_reg_41(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 30ULL: 
      s_reg_41 = Filter_N_Mux_8_2_0_4_90_out1.read();
      break;
    case 31ULL: 
      s_reg_41 = Filter_N_Mux_8_2_0_4_127_out1.read();
      break;
    case 32ULL: 
      s_reg_41 = Filter_N_Mux_8_2_0_4_153_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_8bx3i0c
// resource: regr_en_8
void Filter::drive_s_reg_42(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 30ULL: 
      s_reg_42 = Filter_N_Mux_8_2_0_4_91_out1.read();
      break;
    case 31ULL: 
      s_reg_42 = Filter_N_Mux_8_2_0_4_132_out1.read();
      break;
    case 32ULL: 
      s_reg_42 = Filter_N_Mux_8_2_0_4_155_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_8bx3i0c
// resource: regr_en_8
void Filter::drive_s_reg_49(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 28ULL: 
      s_reg_49 = Filter_N_Mux_8_2_0_4_75_out1.read();
      break;
    case 31ULL: 
      s_reg_49 = Filter_N_Mux_8_2_0_4_134_out1.read();
      break;
    case 32ULL: 
      s_reg_49 = Filter_N_Mux_8_2_0_4_159_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_8bx3i0c
// resource: regr_en_8
void Filter::drive_s_reg_50(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 28ULL: 
      s_reg_50 = Filter_N_Mux_8_2_0_4_76_out1.read();
      break;
    case 31ULL: 
      s_reg_50 = Filter_N_Mux_8_2_0_4_135_out1.read();
      break;
    case 32ULL: 
      s_reg_50 = Filter_N_Mux_8_2_0_4_160_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_2bx2i1c
// resource: regr_en_2
void Filter::drive_s_reg_6(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 0ULL: case 51ULL: 
      s_reg_6 = 0ULL;
      break;
    case 9ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_32_out1.read()) && !
           Filter_LessThan_2Ux2U_1U_4_33_out1.read()) ) {
        s_reg_6 = s_reg_18.read();
      } 
      break;
    case 11ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_22_out1.read()) && !
           Filter_LessThan_2Ux2U_1U_4_26_out1.read()) ) {
        s_reg_6 = s_reg_18.read();
      } 
      break;
    }
    break;
  }
}
// resource: mux_2bx6i1c
// resource: regr_en_2
void Filter::drive_s_reg_8(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_8 = 0ULL;
      break;
    case 2ULL: 
      s_reg_8 = Filter_Add_2Ux1U_2U_4_10_out1.read();
      break;
    case 5ULL: 
      if ( s_reg_12.read() );
      else {
        s_reg_8 = 0ULL;
      }
      break;
    case 9ULL: 
      switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
      default:
        s_reg_8 = Filter_Add_2Ux1U_2U_4_32_out1.read();
        break;
      case 3ULL: 
        s_reg_8 = 0ULL;
        break;
      }
      break;
    case 11ULL: 
      if ( (3ULL == Filter_Add_2Ux1U_2U_4_22_out1.read()) ) {
        if ( Filter_LessThan_2Ux2U_1U_4_26_out1.read() );
        else {
          s_reg_8 = 0ULL;
        }
      } 
      break;
    case 23ULL: 
      switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_58_out1.read()) ) {
      default:
        s_reg_8 = Filter_Add_2Ux1U_2U_4_58_out1.read();
        break;
      case 3ULL: 
        s_reg_8 = 0ULL;
        break;
      }
      break;
    case 40ULL: 
      s_reg_8 = Filter_Add_2Ux1U_2U_4_175_out1.read();
      break;
    case 41ULL: 
      if ( Filter_LessThan_2Ux2U_1U_4_178_out1.read() );
      else {
        s_reg_8 = 0ULL;
      }
      break;
    case 44ULL: 
      if ( Filter_LessThan_4Ux4U_1U_4_188_out1.read() );
      else {
        s_reg_8 = Filter_Add_2Ux1U_2U_4_192_out1.read();
      }
      break;
    }
    break;
  }
}
// resource: mux_5bx3i0c
// resource: regr_en_5
void Filter::drive_s_reg_9(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 2ULL: 
      s_reg_9 = Filter_Add_4Ux2U_5U_4_9_out1.read();
      break;
    case 6ULL: 
      s_reg_9 = Filter_Add_4Ux2U_5U_4_21_out1.read();
      break;
    case 12ULL: case 41ULL: case 46ULL: 
      s_reg_9 = Filter_Add_5Ux5U_5U_4_25_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_2bx3i1c
void Filter::drive_Filter_Mul_2Ux2U_4U_4_6_in2(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_ha44.read()) ) {
  default:
    Filter_Mul_2Ux2U_4U_4_6_in2 = 0ULL;
    break;
  case 1ULL: 
    Filter_Mul_2Ux2U_4U_4_6_in2 = s_reg_6.read();
    break;
  case 2ULL: 
    Filter_Mul_2Ux2U_4U_4_6_in2 = s_reg_18.read();
    break;
  }
}
// resource: Filter_Mul_2Ux2U_4U_4  instance: Filter_Mul_2Ux2U_4U_4_6
void Filter::Filter_Mul_2Ux2U_4U_4_6(){
  Filter_Mul_2Ux2U_4U_4_6_out1 = Filter_Mul_2Ux2U_4U_4_6_in2.read() * 3ULL;
}
// resource: Filter_Add_4Ux2U_5U_4  instance: Filter_Add_4Ux2U_5U_4_7
void Filter::Filter_Add_4Ux2U_5U_4_7(){
  Filter_Add_4Ux2U_5U_4_7_out1 = (Filter_Mul_2Ux2U_4U_4_6_out1.read() + 2ULL);
}
// resource: mux_2bx5i3c
void Filter::drive_result_in1(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h1d00000000a00.read()) ) {
  default:
    result_in1 = 0ULL;
    break;
  case 1ULL: 
    result_in1 = s_reg_18.read();
    break;
  case 2ULL: 
    result_in1 = s_reg_8.read();
    break;
  case 3ULL: 
    if ( Filter_LessThan_2Ux2U_1U_4_193_out1.read() ) {
      result_in1 = s_reg_8.read();
    } else {
      /* state69 */
      result_in1 = 0ULL;
    }
    break;
  case 4ULL: 
    result_in1 = 1ULL;
    break;
  case 5ULL: 
    result_in1 = 2ULL;
    break;
  }
}
// resource: mux_12bx2i1c
void Filter::drive_result_DIN(){
  if ( gs_ctrl_do_filter_h100000000000.read() ) {
    result_DIN = (sc_uint<12> ) (Filter_Div_11Ux3U_11U_4_191_out1.read());
  } else {
    result_DIN = 0ULL;
  }
}
// resource: mux_1bx2i2c
void Filter::drive_result_CE(){
  if ( stall0.read() ) {
    result_CE = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_h9d20000000a01.read()) ) {
    default:
      result_CE = 0ULL;
      break;
    case 1ULL: 
      result_CE = 1ULL;
      break;
    case 2ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_32_out1.read()) && (!
           Filter_LessThan_2Ux2U_1U_4_33_out1.read() && 
           Filter_LessThan_2Ux2U_1U_4_34_out1.read())) ) {
        result_CE = 1ULL;
      } else {
        result_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_22_out1.read()) && (!
           Filter_LessThan_2Ux2U_1U_4_26_out1.read() && 
           Filter_LessThan_2Ux2U_1U_4_34_out1.read())) ) {
        result_CE = 1ULL;
      } else {
        result_CE = 0ULL;
      }
      break;
    case 4ULL: 
      if ( Filter_LessThan_2Ux2U_1U_4_178_out1.read() ) {
        result_CE = 0ULL;
      } else {
        result_CE = 1ULL;
      }
      break;
    case 5ULL: 
      if ( Filter_LessThan_4Ux4U_1U_4_188_out1.read() ) {
        result_CE = 0ULL;
      } else {
        result_CE = 1ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void Filter::drive_result_RW(){
  if ( stall0.read() ) {
    result_RW = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_h8100000000a01.read()) ) {
    default:
      result_RW = 0ULL;
      break;
    case 1ULL: 
      result_RW = 1ULL;
      break;
    case 2ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_32_out1.read()) && (!
           Filter_LessThan_2Ux2U_1U_4_33_out1.read() && 
           Filter_LessThan_2Ux2U_1U_4_34_out1.read())) ) {
        result_RW = 1ULL;
      } else {
        result_RW = 0ULL;
      }
      break;
    case 3ULL: 
      if ( ((3ULL == Filter_Add_2Ux1U_2U_4_22_out1.read()) && (!
           Filter_LessThan_2Ux2U_1U_4_26_out1.read() && 
           Filter_LessThan_2Ux2U_1U_4_34_out1.read())) ) {
        result_RW = 1ULL;
      } else {
        result_RW = 0ULL;
      }
      break;
    case 4ULL: 
      if ( Filter_LessThan_4Ux4U_1U_4_188_out1.read() ) {
        result_RW = 0ULL;
      } else {
        result_RW = 1ULL;
      }
      break;
    }
  }
}
// resource: Filter_Add_4Ux2U_5U_4  instance: Filter_Add_4Ux2U_5U_4_9
void Filter::Filter_Add_4Ux2U_5U_4_9(){
  Filter_Add_4Ux2U_5U_4_9_out1 = (Filter_Mul_2Ux2U_4U_4_6_out1.read() + s_reg_8
                                 .read());
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_10
void Filter::Filter_Add_2Ux1U_2U_4_10(){
  Filter_Add_2Ux1U_2U_4_10_out1 = (s_reg_8.read() + 1ULL);
}
// resource: mux_2bx5i3c
void Filter::drive_color_in1(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_ha18.read()) ) {
  default:
    color_in1 = 0ULL;
    break;
  case 1ULL: 
    color_in1 = 1ULL;
    break;
  case 2ULL: 
    color_in1 = 2ULL;
    break;
  case 3ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
    default:
      color_in1 = Filter_Add_2Ux1U_2U_4_32_out1.read();
      break;
    case 3ULL: 
      color_in1 = 0ULL;
      break;
    }
    break;
  case 4ULL: 
    color_in1 = Filter_Add_2Ux1U_2U_4_22_out1.read();
    break;
  }
}
// resource: mux_8bx3i0c
void Filter::drive_color_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h18.read()) ) {
  default:
    color_DIN = (sc_uint<8> )i_rgb_data.read();
    break;
  case 1ULL: 
    color_DIN = (sc_uint<8> ) (s_reg_11_slice.read().range(15,8));
    break;
  case 2ULL: 
    color_DIN = (sc_uint<8> ) (s_reg_11_slice.read().range(23,16));
    break;
  }
}
// resource: mux_1bx2i2c
void Filter::drive_color_CE(){
  if ( stall0.read() ) {
    color_CE = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_ha3c.read()) ) {
    default:
      color_CE = 0ULL;
      break;
    case 1ULL: 
      color_CE = 1ULL;
      break;
    case 2ULL: 
      if ( s_reg_12.read() ) {
        color_CE = 1ULL;
      } else {
        if ( Filter_Equal_2Ux2U_1U_4_11_out1.read() ) {
          color_CE = 1ULL;
        } else {
          color_CE = 0ULL;
        }
      }
      break;
    case 3ULL: 
      switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
      default:
        if ( s_reg_12.read() ) {
          color_CE = 1ULL;
        } else {
          color_CE = 0ULL;
        }
        break;
      case 3ULL: 
        if ( (Filter_LessThan_2Ux2U_1U_4_33_out1.read() && 
             Filter_Equal_2Ux2U_1U_4_11_out1.read()) ) {
          color_CE = 1ULL;
        } else {
          color_CE = 0ULL;
        }
        break;
      }
      break;
    case 4ULL: 
      if ( (3ULL != Filter_Add_2Ux1U_2U_4_22_out1.read()) ) {
        color_CE = 1ULL;
      } else {
        color_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void Filter::drive_color_RW(){
  if ( stall0.read() ) {
    color_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h1c.read() ) {
      color_RW = 1ULL;
    } else {
      color_RW = 0ULL;
    }
  }
}
// resource: mux_2bx2i1c
void Filter::drive_Filter_Equal_2Ux2U_1U_4_11_in2(){
  if ( gs_ctrl_do_filter_h200.read() ) {
    Filter_Equal_2Ux2U_1U_4_11_in2 = s_reg_22.read();
  } else {
    Filter_Equal_2Ux2U_1U_4_11_in2 = 0ULL;
  }
}
// resource: Filter_Equal_2Ux2U_1U_4  instance: Filter_Equal_2Ux2U_1U_4_11
void Filter::Filter_Equal_2Ux2U_1U_4_11(){
  Filter_Equal_2Ux2U_1U_4_11_out1 = (Filter_Equal_2Ux2U_1U_4_11_in2.read() == 
                                    2ULL);
}
void Filter::drive_Filter_Add_3Ux2U_4U_4_12_in2(){
  Filter_Add_3Ux2U_4U_4_12_in2 = ( (sc_uint<3> )(sc_bv<3>)((sc_bv<2>)(s_reg_6
                                 .read()), 
                                 (sc_bv<1>)(0ULL)) );
}
// resource: Filter_Add_3Ux2U_4U_4  instance: Filter_Add_3Ux2U_4U_4_12
void Filter::Filter_Add_3Ux2U_4U_4_12(){
  Filter_Add_3Ux2U_4U_4_12_out1 = (Filter_Add_3Ux2U_4U_4_12_in2.read() + 
                                  Filter_Equal_2Ux2U_1U_4_11_in2.read());
}
// resource: mux_4bx2i2c
void Filter::drive_Filter_Mul_4Ux2U_5U_4_24_in2(){
  if ( gs_ctrl_do_filter_h7e0080.read() ) {
    Filter_Mul_4Ux2U_5U_4_24_in2 = 6ULL;
  } else {
    Filter_Mul_4Ux2U_5U_4_24_in2 = 9ULL;
  }
}
// resource: mux_2bx5i1c
void Filter::drive_Filter_Mul_4Ux2U_5U_4_24_in1(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h67fffffffb80.read()) ) {
  default:
    Filter_Mul_4Ux2U_5U_4_24_in1 = 0ULL;
    break;
  case 1ULL: 
    Filter_Mul_4Ux2U_5U_4_24_in1 = s_reg_8.read();
    break;
  case 2ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
    default:
      Filter_Mul_4Ux2U_5U_4_24_in1 = Filter_Add_2Ux1U_2U_4_32_out1.read();
      break;
    case 3ULL: 
      Filter_Mul_4Ux2U_5U_4_24_in1 = 0ULL;
      break;
    }
    break;
  case 3ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_22_out1.read()) ) {
    default:
      Filter_Mul_4Ux2U_5U_4_24_in1 = Filter_Add_2Ux1U_2U_4_22_out1.read();
      break;
    case 3ULL: 
      Filter_Mul_4Ux2U_5U_4_24_in1 = 0ULL;
      break;
    }
    break;
  case 4ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_58_out1.read()) ) {
    default:
      Filter_Mul_4Ux2U_5U_4_24_in1 = Filter_Add_2Ux1U_2U_4_58_out1.read();
      break;
    case 3ULL: 
      Filter_Mul_4Ux2U_5U_4_24_in1 = 0ULL;
      break;
    }
    break;
  case 5ULL: 
    if ( Filter_LessThan_2Ux2U_1U_4_178_out1.read() ) {
      Filter_Mul_4Ux2U_5U_4_24_in1 = s_reg_8.read();
    } else {
      Filter_Mul_4Ux2U_5U_4_24_in1 = 0ULL;
    }
    break;
  }
}
// resource: Filter_Mul_4Ux2U_5U_4  instance: Filter_Mul_4Ux2U_5U_4_24
void Filter::Filter_Mul_4Ux2U_5U_4_24(){
  Filter_Mul_4Ux2U_5U_4_24_out1 = Filter_Mul_4Ux2U_5U_4_24_in2.read() * 
                                  Filter_Mul_4Ux2U_5U_4_24_in1.read();
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_14
void Filter::Filter_Add_2Ux1U_2U_4_14(){
  Filter_Add_2Ux1U_2U_4_14_out1 = (s_reg_6.read() + 1ULL);
}
// resource: Filter_Add_5Ux5U_5U_4  instance: Filter_Add_5Ux5U_5U_4_16
void Filter::Filter_Add_5Ux5U_5U_4_16(){
  Filter_Add_5Ux5U_5U_4_16_out1 = (s_reg_17.read() + s_reg_9.read());
}
// resource: Filter_Equal_2Ux2U_1U_4  instance: Filter_Equal_2Ux2U_1U_4_18
void Filter::Filter_Equal_2Ux2U_1U_4_18(){
  Filter_Equal_2Ux2U_1U_4_18_out1 = (s_reg_13.read() == 2ULL);
}
// resource: Filter_Add_5Ux5U_5U_4  instance: Filter_Add_5Ux5U_5U_4_20
void Filter::Filter_Add_5Ux5U_5U_4_20(){
  Filter_Add_5Ux5U_5U_4_20_out1 = (s_reg_17.read() + (sc_uint<5> )s_reg_24
                                  .read());
}
// resource: Filter_Add_4Ux2U_5U_4  instance: Filter_Add_4Ux2U_5U_4_21
void Filter::Filter_Add_4Ux2U_5U_4_21(){
  Filter_Add_4Ux2U_5U_4_21_out1 = (Filter_Mul_2Ux2U_4U_4_6_out1.read() + 
                                  s_reg_13.read());
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_22
void Filter::Filter_Add_2Ux1U_2U_4_22(){
  Filter_Add_2Ux1U_2U_4_22_out1 = (s_reg_13.read() + 1ULL);
}
// resource: mux_5bx9i0c
void Filter::drive_box_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h27ffffbf0500.read()) ) {
  default:
    box_in1 = Filter_Add_5Ux5U_5U_4_20_out1.read();
    break;
  case 1ULL: 
    box_in1 = Filter_Add_5Ux5U_5U_4_25_out1.read();
    break;
  case 2ULL: 
    box_in1 = Filter_Add_5Ux5U_5U_4_16_out1.read();
    break;
  case 3ULL: 
    box_in1 = (sc_uint<5> )s_reg_24.read();
    break;
  case 4ULL: 
    box_in1 = s_reg_9.read();
    break;
  case 5ULL: 
    box_in1 = s_reg_17.read();
    break;
  case 6ULL: 
    box_in1 = (sc_uint<5> )s_reg_31.read();
    break;
  case 7ULL: 
    box_in1 = (sc_uint<5> )s_reg_32.read();
    break;
  case 8ULL: 
    box_in1 = Filter_Mul_4Ux2U_5U_4_24_out1.read();
    break;
  case 9ULL: 
    if ( (((sc_uint<4> )s_reg_17.read() != 4ULL) && 
         Filter_NotEQ_4Ux3U_1U_4_183_out1.read()) ) {
      box_in1 = Filter_Add_5Ux5U_5U_4_25_out1.read();
    } else {
      box_in1 = s_reg_9.read();
    }
    break;
  }
}
// resource: mux_8bx11i0c
void Filter::drive_box_DIN(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h1ff00000100.read()) ) {
  default:
    box_DIN = color_out1.read();
    break;
  case 1ULL: 
    box_DIN = data_buffer_out1.read();
    break;
  case 2ULL: 
    box_DIN = Filter_N_Mux_8_2_0_4_143_out1.read();
    break;
  case 3ULL: 
    box_DIN = s_reg_32.read();
    break;
  case 4ULL: 
    box_DIN = (sc_uint<8> )s_reg_35.read();
    break;
  case 5ULL: 
    box_DIN = s_reg_24.read();
    break;
  case 6ULL: 
    box_DIN = s_reg_41.read();
    break;
  case 7ULL: 
    box_DIN = s_reg_42.read();
    break;
  case 8ULL: 
    box_DIN = s_reg_31.read();
    break;
  case 9ULL: 
    box_DIN = s_reg_49.read();
    break;
  case 10ULL: 
    box_DIN = s_reg_50.read();
    break;
  }
}
// resource: mux_1bx4i2c
void Filter::drive_box_CE(){
  if ( stall0.read() ) {
    box_CE = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_h27ffffbf0540.read()) ) {
    default:
      box_CE = 0ULL;
      break;
    case 1ULL: 
      if ( Filter_Equal_2Ux2U_1U_4_18_out1.read() ) {
        box_CE = Filter_Equal_2Ux2U_1U_4_18_out1.read();
      } else {
        box_CE = 0ULL;
      }
      break;
    case 2ULL: 
      if ( Filter_NotEQ_2Ux2U_1U_4_28_out1.read() ) {
        box_CE = Filter_NotEQ_2Ux2U_1U_4_28_out1.read();
      } else {
        box_CE = 0ULL;
      }
      break;
    case 3ULL: 
      box_CE = 1ULL;
      break;
    case 4ULL: 
      if ( (3ULL == Filter_Add_2Ux1U_2U_4_58_out1.read()) ) {
        box_CE = 1ULL;
      } else {
        box_CE = 0ULL;
      }
      break;
    case 5ULL: 
      if ( Filter_LessThan_2Ux2U_1U_4_178_out1.read() ) {
        box_CE = 1ULL;
      } else {
        box_CE = 0ULL;
      }
      break;
    case 6ULL: 
      if ( Filter_NotEQ_4Ux3U_1U_4_183_out1.read() ) {
        box_CE = 1ULL;
      } else {
        box_CE = 0ULL;
      }
      break;
    case 7ULL: 
      if ( (((sc_uint<4> )s_reg_17.read() != 4ULL) && 
           Filter_NotEQ_4Ux3U_1U_4_183_out1.read()) ) {
        box_CE = 1ULL;
      } else {
        if ( (((sc_uint<4> )s_reg_17.read() == 4ULL) && 
             Filter_Equal_4Ux3U_1U_4_182_out1.read()) ) {
          box_CE = 1ULL;
        } else {
          box_CE = 0ULL;
        }
      }
      break;
    }
  }
}
// resource: mux_1bx4i2c
void Filter::drive_box_RW(){
  if ( stall0.read() ) {
    box_RW = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h1ff00000540.read()) ) {
    default:
      box_RW = 0ULL;
      break;
    case 1ULL: 
      if ( Filter_Equal_2Ux2U_1U_4_18_out1.read() ) {
        box_RW = Filter_Equal_2Ux2U_1U_4_18_out1.read();
      } else {
        box_RW = 0ULL;
      }
      break;
    case 2ULL: 
      if ( Filter_NotEQ_2Ux2U_1U_4_28_out1.read() ) {
        box_RW = Filter_NotEQ_2Ux2U_1U_4_28_out1.read();
      } else {
        box_RW = 0ULL;
      }
      break;
    case 3ULL: 
      box_RW = 1ULL;
      break;
    }
  }
}
// resource: Filter_NotEQ_2Ux2U_1U_4  instance: Filter_NotEQ_2Ux2U_1U_4_28
void Filter::Filter_NotEQ_2Ux2U_1U_4_28(){
  Filter_NotEQ_2Ux2U_1U_4_28_out1 = (s_reg_13.read() != 2ULL);
}
// resource: mux_5bx11i9c
void Filter::drive_Filter_Add_5Ux5U_5U_4_25_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h47febffdfb00.read()) ) {
  default:
    Filter_Add_5Ux5U_5U_4_25_in1 = (sc_uint<5> ) ((sc_uint<4> )s_reg_17.read());
    break;
  case 1ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = s_reg_9.read();
    break;
  case 2ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 1ULL;
    break;
  case 3ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 2ULL;
    break;
  case 4ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 4ULL;
    break;
  case 5ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 5ULL;
    break;
  case 6ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 7ULL;
    break;
  case 7ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 8ULL;
    break;
  case 8ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 3ULL;
    break;
  case 9ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_58_out1.read()) ) {
    default:
      Filter_Add_5Ux5U_5U_4_25_in1 = 1ULL;
      break;
    case 3ULL: 
      Filter_Add_5Ux5U_5U_4_25_in1 = 4ULL;
      break;
    }
    break;
  case 10ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 6ULL;
    break;
  case 11ULL: 
    Filter_Add_5Ux5U_5U_4_25_in1 = 0ULL;
    break;
  }
}
// resource: Filter_Add_5Ux5U_5U_4  instance: Filter_Add_5Ux5U_5U_4_25
void Filter::Filter_Add_5Ux5U_5U_4_25(){
  Filter_Add_5Ux5U_5U_4_25_out1 = (Filter_Mul_4Ux2U_5U_4_24_out1.read() + 
                                  Filter_Add_5Ux5U_5U_4_25_in1.read());
}
// resource: Filter_LessThan_2Ux2U_1U_4  instance: Filter_LessThan_2Ux2U_1U_4_26
void Filter::Filter_LessThan_2Ux2U_1U_4_26(){
  Filter_LessThan_2Ux2U_1U_4_26_out1 = (/*imp*/sc_uint<1>)(s_reg_8.read() < (
                                       sc_uint<2> )3ULL);
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_27
void Filter::Filter_Add_2Ux1U_2U_4_27(){
  Filter_Add_2Ux1U_2U_4_27_out1 = (s_reg_13.read() + 1ULL);
}
// resource: mux_5bx2i0c
void Filter::drive_data_buffer_in1(){
  if ( gs_ctrl_do_filter_h20000.read() ) {
    data_buffer_in1 = Filter_Mul_4Ux2U_5U_4_24_out1.read();
  } else {
    data_buffer_in1 = Filter_Add_5Ux5U_5U_4_25_out1.read();
  }
}
// resource: mux_1bx2i2c
void Filter::drive_data_buffer_CE(){
  if ( stall0.read() ) {
    data_buffer_CE = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h7e00800.read()) ) {
    default:
      data_buffer_CE = 0ULL;
      break;
    case 1ULL: 
      if ( Filter_NotEQ_2Ux2U_1U_4_28_out1.read() ) {
        data_buffer_CE = 1ULL;
      } else {
        data_buffer_CE = 0ULL;
      }
      break;
    case 2ULL: 
      data_buffer_CE = 1ULL;
      break;
    }
  }
}
// resource: mux_1bx2i2c
void Filter::drive_data_buffer_RW(){
  if ( stall0.read() ) {
    data_buffer_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h7e0000.read() ) {
      data_buffer_RW = 1ULL;
    } else {
      data_buffer_RW = 0ULL;
    }
  }
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_32
void Filter::Filter_Add_2Ux1U_2U_4_32(){
  Filter_Add_2Ux1U_2U_4_32_out1 = (s_reg_8.read() + 1ULL);
}
// resource: Filter_LessThan_2Ux2U_1U_4  instance: Filter_LessThan_2Ux2U_1U_4_33
void Filter::Filter_LessThan_2Ux2U_1U_4_33(){
  Filter_LessThan_2Ux2U_1U_4_33_out1 = (/*imp*/sc_uint<1>)(s_reg_22.read() < (
                                       sc_uint<2> )3ULL);
}
// resource: Filter_LessThan_2Ux2U_1U_4  instance: Filter_LessThan_2Ux2U_1U_4_34
void Filter::Filter_LessThan_2Ux2U_1U_4_34(){
  Filter_LessThan_2Ux2U_1U_4_34_out1 = (/*imp*/sc_uint<1>)(s_reg_18.read() < (
                                       sc_uint<2> )3ULL);
}
void Filter::drive_data_buffer_DIN(){
  data_buffer_DIN = box_out1.read();
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_58
void Filter::Filter_Add_2Ux1U_2U_4_58(){
  Filter_Add_2Ux1U_2U_4_58_out1 = (s_reg_8.read() + 1ULL);
}
// resource: mux_2bx2i1c
void Filter::drive_center_in1(){
  if ( gs_ctrl_do_filter_h20000000000.read() ) {
    center_in1 = 0ULL;
  } else {
    center_in1 = s_reg_8.read();
  }
}
void Filter::drive_center_DIN(){
  center_DIN = box_out1.read();
}
// resource: mux_1bx2i2c
void Filter::drive_center_CE(){
  if ( stall0.read() ) {
    center_CE = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h420001000000.read()) ) {
    default:
      center_CE = 0ULL;
      break;
    case 1ULL: 
      center_CE = 1ULL;
      break;
    case 2ULL: 
      if ( Filter_LessThan_2Ux2U_1U_4_178_out1.read() ) {
        center_CE = 0ULL;
      } else {
        center_CE = 1ULL;
      }
      break;
    case 3ULL: 
      if ( Filter_LessThan_2Ux2U_1U_4_193_out1.read() ) {
        center_CE = 1ULL;
      } else {
        center_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void Filter::drive_center_RW(){
  if ( stall0.read() ) {
    center_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h1000000.read() ) {
      center_RW = 1ULL;
    } else {
      center_RW = 0ULL;
    }
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_69
void Filter::Filter_LessThan_8Ux8U_1U_4_69(){
  Filter_LessThan_8Ux8U_1U_4_69_out1 = (/*imp*/sc_uint<1>)((sc_uint<8> )s_reg_33
                                       .read() < box_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_70(){
  if ( Filter_LessThan_8Ux8U_1U_4_69_out1.read() ) {
    Filter_N_Mux_8_2_0_4_70_out1 = (sc_uint<8> )s_reg_33.read();
  } else {
    Filter_N_Mux_8_2_0_4_70_out1 = box_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_71(){
  if ( Filter_LessThan_8Ux8U_1U_4_69_out1.read() ) {
    Filter_N_Mux_8_2_0_4_71_out1 = box_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_71_out1 = (sc_uint<8> )s_reg_33.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_74
void Filter::Filter_LessThan_8Ux8U_1U_4_74(){
  Filter_LessThan_8Ux8U_1U_4_74_out1 = (/*imp*/sc_uint<1>)(s_reg_31.read() < 
                                       box_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_75(){
  if ( Filter_LessThan_8Ux8U_1U_4_74_out1.read() ) {
    Filter_N_Mux_8_2_0_4_75_out1 = s_reg_31.read();
  } else {
    Filter_N_Mux_8_2_0_4_75_out1 = box_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_76(){
  if ( Filter_LessThan_8Ux8U_1U_4_74_out1.read() ) {
    Filter_N_Mux_8_2_0_4_76_out1 = box_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_76_out1 = s_reg_31.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_80
void Filter::Filter_LessThan_8Ux8U_1U_4_80(){
  Filter_LessThan_8Ux8U_1U_4_80_out1 = (/*imp*/sc_uint<1>)(s_reg_31.read() < 
                                       box_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_81(){
  if ( Filter_LessThan_8Ux8U_1U_4_80_out1.read() ) {
    Filter_N_Mux_8_2_0_4_81_out1 = s_reg_31.read();
  } else {
    Filter_N_Mux_8_2_0_4_81_out1 = box_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_82(){
  if ( Filter_LessThan_8Ux8U_1U_4_80_out1.read() ) {
    Filter_N_Mux_8_2_0_4_82_out1 = box_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_82_out1 = s_reg_31.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_83
void Filter::Filter_LessThan_8Ux8U_1U_4_83(){
  Filter_LessThan_8Ux8U_1U_4_83_out1 = (/*imp*/sc_uint<1>)(s_reg_49.read() < 
                                       Filter_N_Mux_8_2_0_4_81_out1.read());
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_84
void Filter::Filter_LessThan_8Ux8U_1U_4_84(){
  Filter_LessThan_8Ux8U_1U_4_84_out1 = (/*imp*/sc_uint<1>)(s_reg_50.read() < 
                                       Filter_N_Mux_8_2_0_4_82_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_85(){
  if ( Filter_LessThan_8Ux8U_1U_4_83_out1.read() ) {
    Filter_N_Mux_8_2_0_4_85_out1 = Filter_N_Mux_8_2_0_4_81_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_85_out1 = s_reg_49.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_86(){
  if ( Filter_LessThan_8Ux8U_1U_4_84_out1.read() ) {
    Filter_N_Mux_8_2_0_4_86_out1 = s_reg_50.read();
  } else {
    Filter_N_Mux_8_2_0_4_86_out1 = Filter_N_Mux_8_2_0_4_82_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_87
void Filter::Filter_LessThan_8Ux8U_1U_4_87(){
  Filter_LessThan_8Ux8U_1U_4_87_out1 = (/*imp*/sc_uint<1>)(
                                       Filter_N_Mux_8_2_0_4_86_out1.read() < 
                                       Filter_N_Mux_8_2_0_4_85_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_88(){
  if ( Filter_LessThan_8Ux8U_1U_4_83_out1.read() ) {
    Filter_N_Mux_8_2_0_4_88_out1 = s_reg_49.read();
  } else {
    Filter_N_Mux_8_2_0_4_88_out1 = Filter_N_Mux_8_2_0_4_81_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_89(){
  if ( Filter_LessThan_8Ux8U_1U_4_84_out1.read() ) {
    Filter_N_Mux_8_2_0_4_89_out1 = Filter_N_Mux_8_2_0_4_82_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_89_out1 = s_reg_50.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_90(){
  if ( Filter_LessThan_8Ux8U_1U_4_87_out1.read() ) {
    Filter_N_Mux_8_2_0_4_90_out1 = Filter_N_Mux_8_2_0_4_86_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_90_out1 = Filter_N_Mux_8_2_0_4_85_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_91(){
  if ( Filter_LessThan_8Ux8U_1U_4_87_out1.read() ) {
    Filter_N_Mux_8_2_0_4_91_out1 = Filter_N_Mux_8_2_0_4_85_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_91_out1 = Filter_N_Mux_8_2_0_4_86_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_92
void Filter::Filter_LessThan_8Ux8U_1U_4_92(){
  Filter_LessThan_8Ux8U_1U_4_92_out1 = (/*imp*/sc_uint<1>)(box_out1.read() < 
                                       s_reg_32.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_93(){
  if ( Filter_LessThan_8Ux8U_1U_4_92_out1.read() ) {
    Filter_N_Mux_8_2_0_4_93_out1 = box_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_93_out1 = s_reg_32.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_94(){
  if ( Filter_LessThan_8Ux8U_1U_4_92_out1.read() ) {
    Filter_N_Mux_8_2_0_4_94_out1 = s_reg_32.read();
  } else {
    Filter_N_Mux_8_2_0_4_94_out1 = box_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_95
void Filter::Filter_LessThan_8Ux8U_1U_4_95(){
  Filter_LessThan_8Ux8U_1U_4_95_out1 = (/*imp*/sc_uint<1>)(
                                       Filter_N_Mux_8_2_0_4_93_out1.read() < (
                                       sc_uint<8> )s_reg_33.read());
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_96
void Filter::Filter_LessThan_8Ux8U_1U_4_96(){
  Filter_LessThan_8Ux8U_1U_4_96_out1 = (/*imp*/sc_uint<1>)(
                                       Filter_N_Mux_8_2_0_4_94_out1.read() < (
                                       sc_uint<8> )s_reg_35.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_97(){
  if ( Filter_LessThan_8Ux8U_1U_4_95_out1.read() ) {
    Filter_N_Mux_8_2_0_4_97_out1 = (sc_uint<8> )s_reg_33.read();
  } else {
    Filter_N_Mux_8_2_0_4_97_out1 = Filter_N_Mux_8_2_0_4_93_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_98(){
  if ( Filter_LessThan_8Ux8U_1U_4_96_out1.read() ) {
    Filter_N_Mux_8_2_0_4_98_out1 = Filter_N_Mux_8_2_0_4_94_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_98_out1 = (sc_uint<8> )s_reg_35.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_99
void Filter::Filter_LessThan_8Ux8U_1U_4_99(){
  Filter_LessThan_8Ux8U_1U_4_99_out1 = (/*imp*/sc_uint<1>)(
                                       Filter_N_Mux_8_2_0_4_98_out1.read() < 
                                       Filter_N_Mux_8_2_0_4_97_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_100(){
  if ( Filter_LessThan_8Ux8U_1U_4_95_out1.read() ) {
    Filter_N_Mux_8_2_0_4_100_out1 = Filter_N_Mux_8_2_0_4_93_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_100_out1 = (sc_uint<8> )s_reg_33.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_101(){
  if ( Filter_LessThan_8Ux8U_1U_4_96_out1.read() ) {
    Filter_N_Mux_8_2_0_4_101_out1 = (sc_uint<8> )s_reg_35.read();
  } else {
    Filter_N_Mux_8_2_0_4_101_out1 = Filter_N_Mux_8_2_0_4_94_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_102(){
  if ( Filter_LessThan_8Ux8U_1U_4_99_out1.read() ) {
    Filter_N_Mux_8_2_0_4_102_out1 = Filter_N_Mux_8_2_0_4_98_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_102_out1 = Filter_N_Mux_8_2_0_4_97_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_103(){
  if ( Filter_LessThan_8Ux8U_1U_4_99_out1.read() ) {
    Filter_N_Mux_8_2_0_4_103_out1 = Filter_N_Mux_8_2_0_4_97_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_103_out1 = Filter_N_Mux_8_2_0_4_98_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_104
void Filter::Filter_LessThan_8Ux8U_1U_4_104(){
  Filter_LessThan_8Ux8U_1U_4_104_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_100_out1.read() < 
                                        s_reg_31.read());
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_105
void Filter::Filter_LessThan_8Ux8U_1U_4_105(){
  Filter_LessThan_8Ux8U_1U_4_105_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_103_out1.read() < 
                                        s_reg_42.read());
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_106
void Filter::Filter_LessThan_8Ux8U_1U_4_106(){
  Filter_LessThan_8Ux8U_1U_4_106_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_102_out1.read() < 
                                        s_reg_41.read());
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_107
void Filter::Filter_LessThan_8Ux8U_1U_4_107(){
  Filter_LessThan_8Ux8U_1U_4_107_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_101_out1.read() < 
                                        s_reg_24.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_109(){
  if ( Filter_LessThan_8Ux8U_1U_4_104_out1.read() ) {
    Filter_N_Mux_8_2_0_4_109_out1 = s_reg_31.read();
  } else {
    Filter_N_Mux_8_2_0_4_109_out1 = Filter_N_Mux_8_2_0_4_100_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_110(){
  if ( Filter_LessThan_8Ux8U_1U_4_105_out1.read() ) {
    Filter_N_Mux_8_2_0_4_110_out1 = Filter_N_Mux_8_2_0_4_103_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_110_out1 = s_reg_42.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_111(){
  if ( Filter_LessThan_8Ux8U_1U_4_106_out1.read() ) {
    Filter_N_Mux_8_2_0_4_111_out1 = s_reg_41.read();
  } else {
    Filter_N_Mux_8_2_0_4_111_out1 = Filter_N_Mux_8_2_0_4_102_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_112(){
  if ( Filter_LessThan_8Ux8U_1U_4_107_out1.read() ) {
    Filter_N_Mux_8_2_0_4_112_out1 = Filter_N_Mux_8_2_0_4_101_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_112_out1 = s_reg_24.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_114
void Filter::Filter_LessThan_8Ux8U_1U_4_114(){
  Filter_LessThan_8Ux8U_1U_4_114_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_110_out1.read() < 
                                        Filter_N_Mux_8_2_0_4_109_out1.read());
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_115
void Filter::Filter_LessThan_8Ux8U_1U_4_115(){
  Filter_LessThan_8Ux8U_1U_4_115_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_112_out1.read() < 
                                        Filter_N_Mux_8_2_0_4_111_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_116(){
  if ( Filter_LessThan_8Ux8U_1U_4_104_out1.read() ) {
    Filter_N_Mux_8_2_0_4_116_out1 = Filter_N_Mux_8_2_0_4_100_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_116_out1 = s_reg_31.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_117(){
  if ( Filter_LessThan_8Ux8U_1U_4_114_out1.read() ) {
    Filter_N_Mux_8_2_0_4_117_out1 = Filter_N_Mux_8_2_0_4_109_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_117_out1 = Filter_N_Mux_8_2_0_4_110_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_118(){
  if ( Filter_LessThan_8Ux8U_1U_4_115_out1.read() ) {
    Filter_N_Mux_8_2_0_4_118_out1 = Filter_N_Mux_8_2_0_4_112_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_118_out1 = Filter_N_Mux_8_2_0_4_111_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_119
void Filter::Filter_LessThan_8Ux8U_1U_4_119(){
  Filter_LessThan_8Ux8U_1U_4_119_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_118_out1.read() < 
                                        Filter_N_Mux_8_2_0_4_117_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_120(){
  if ( Filter_LessThan_8Ux8U_1U_4_114_out1.read() ) {
    Filter_N_Mux_8_2_0_4_120_out1 = Filter_N_Mux_8_2_0_4_110_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_120_out1 = Filter_N_Mux_8_2_0_4_109_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_121(){
  if ( Filter_LessThan_8Ux8U_1U_4_106_out1.read() ) {
    Filter_N_Mux_8_2_0_4_121_out1 = Filter_N_Mux_8_2_0_4_102_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_121_out1 = s_reg_41.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_122(){
  if ( Filter_LessThan_8Ux8U_1U_4_119_out1.read() ) {
    Filter_N_Mux_8_2_0_4_122_out1 = Filter_N_Mux_8_2_0_4_117_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_122_out1 = Filter_N_Mux_8_2_0_4_118_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_123
void Filter::Filter_LessThan_8Ux8U_1U_4_123(){
  Filter_LessThan_8Ux8U_1U_4_123_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_121_out1.read() < 
                                        Filter_N_Mux_8_2_0_4_120_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_124(){
  if ( Filter_LessThan_8Ux8U_1U_4_123_out1.read() ) {
    Filter_N_Mux_8_2_0_4_124_out1 = Filter_N_Mux_8_2_0_4_120_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_124_out1 = Filter_N_Mux_8_2_0_4_121_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_125(){
  if ( Filter_LessThan_8Ux8U_1U_4_105_out1.read() ) {
    Filter_N_Mux_8_2_0_4_125_out1 = s_reg_42.read();
  } else {
    Filter_N_Mux_8_2_0_4_125_out1 = Filter_N_Mux_8_2_0_4_103_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_126(){
  if ( Filter_LessThan_8Ux8U_1U_4_115_out1.read() ) {
    Filter_N_Mux_8_2_0_4_126_out1 = Filter_N_Mux_8_2_0_4_111_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_126_out1 = Filter_N_Mux_8_2_0_4_112_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_127(){
  if ( Filter_LessThan_8Ux8U_1U_4_123_out1.read() ) {
    Filter_N_Mux_8_2_0_4_127_out1 = Filter_N_Mux_8_2_0_4_121_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_127_out1 = Filter_N_Mux_8_2_0_4_120_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_128
void Filter::Filter_LessThan_8Ux8U_1U_4_128(){
  Filter_LessThan_8Ux8U_1U_4_128_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_126_out1.read() < 
                                        Filter_N_Mux_8_2_0_4_125_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_129(){
  if ( Filter_LessThan_8Ux8U_1U_4_119_out1.read() ) {
    Filter_N_Mux_8_2_0_4_129_out1 = Filter_N_Mux_8_2_0_4_118_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_129_out1 = Filter_N_Mux_8_2_0_4_117_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_130(){
  if ( Filter_LessThan_8Ux8U_1U_4_128_out1.read() ) {
    Filter_N_Mux_8_2_0_4_130_out1 = Filter_N_Mux_8_2_0_4_126_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_130_out1 = Filter_N_Mux_8_2_0_4_125_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_131
void Filter::Filter_LessThan_8Ux8U_1U_4_131(){
  Filter_LessThan_8Ux8U_1U_4_131_out1 = (/*imp*/sc_uint<1>)(
                                        Filter_N_Mux_8_2_0_4_129_out1.read() < 
                                        Filter_N_Mux_8_2_0_4_130_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_132(){
  if ( Filter_LessThan_8Ux8U_1U_4_131_out1.read() ) {
    Filter_N_Mux_8_2_0_4_132_out1 = Filter_N_Mux_8_2_0_4_129_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_132_out1 = Filter_N_Mux_8_2_0_4_130_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_133(){
  if ( Filter_LessThan_8Ux8U_1U_4_128_out1.read() ) {
    Filter_N_Mux_8_2_0_4_133_out1 = Filter_N_Mux_8_2_0_4_125_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_133_out1 = Filter_N_Mux_8_2_0_4_126_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_134(){
  if ( Filter_LessThan_8Ux8U_1U_4_131_out1.read() ) {
    Filter_N_Mux_8_2_0_4_134_out1 = Filter_N_Mux_8_2_0_4_130_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_134_out1 = Filter_N_Mux_8_2_0_4_129_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_135(){
  if ( Filter_LessThan_8Ux8U_1U_4_107_out1.read() ) {
    Filter_N_Mux_8_2_0_4_135_out1 = s_reg_24.read();
  } else {
    Filter_N_Mux_8_2_0_4_135_out1 = Filter_N_Mux_8_2_0_4_101_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_136
void Filter::Filter_LessThan_8Ux8U_1U_4_136(){
  Filter_LessThan_8Ux8U_1U_4_136_out1 = (/*imp*/sc_uint<1>)(s_reg_32.read() < 
                                        box_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_137(){
  if ( Filter_LessThan_8Ux8U_1U_4_136_out1.read() ) {
    Filter_N_Mux_8_2_0_4_137_out1 = box_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_137_out1 = s_reg_32.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_138
void Filter::Filter_LessThan_8Ux8U_1U_4_138(){
  Filter_LessThan_8Ux8U_1U_4_138_out1 = (/*imp*/sc_uint<1>)((sc_uint<8> )
                                        s_reg_35.read() < 
                                        Filter_N_Mux_8_2_0_4_137_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_139(){
  if ( Filter_LessThan_8Ux8U_1U_4_138_out1.read() ) {
    Filter_N_Mux_8_2_0_4_139_out1 = (sc_uint<8> )s_reg_35.read();
  } else {
    Filter_N_Mux_8_2_0_4_139_out1 = Filter_N_Mux_8_2_0_4_137_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_140
void Filter::Filter_LessThan_8Ux8U_1U_4_140(){
  Filter_LessThan_8Ux8U_1U_4_140_out1 = (/*imp*/sc_uint<1>)(s_reg_24.read() < 
                                        Filter_N_Mux_8_2_0_4_139_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_141(){
  if ( Filter_LessThan_8Ux8U_1U_4_140_out1.read() ) {
    Filter_N_Mux_8_2_0_4_141_out1 = s_reg_24.read();
  } else {
    Filter_N_Mux_8_2_0_4_141_out1 = Filter_N_Mux_8_2_0_4_139_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_143(){
  if ( Filter_LessThan_8Ux8U_1U_4_136_out1.read() ) {
    Filter_N_Mux_8_2_0_4_143_out1 = s_reg_32.read();
  } else {
    Filter_N_Mux_8_2_0_4_143_out1 = box_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_144
void Filter::Filter_LessThan_8Ux8U_1U_4_144(){
  Filter_LessThan_8Ux8U_1U_4_144_out1 = (/*imp*/sc_uint<1>)(s_reg_41.read() < 
                                        Filter_N_Mux_8_2_0_4_141_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_145(){
  if ( Filter_LessThan_8Ux8U_1U_4_144_out1.read() ) {
    Filter_N_Mux_8_2_0_4_145_out1 = s_reg_41.read();
  } else {
    Filter_N_Mux_8_2_0_4_145_out1 = Filter_N_Mux_8_2_0_4_141_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_146(){
  if ( Filter_LessThan_8Ux8U_1U_4_140_out1.read() ) {
    Filter_N_Mux_8_2_0_4_146_out1 = Filter_N_Mux_8_2_0_4_139_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_146_out1 = s_reg_24.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_147(){
  if ( Filter_LessThan_8Ux8U_1U_4_144_out1.read() ) {
    Filter_N_Mux_8_2_0_4_147_out1 = Filter_N_Mux_8_2_0_4_141_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_147_out1 = s_reg_41.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_148
void Filter::Filter_LessThan_8Ux8U_1U_4_148(){
  Filter_LessThan_8Ux8U_1U_4_148_out1 = (/*imp*/sc_uint<1>)(s_reg_42.read() < 
                                        Filter_N_Mux_8_2_0_4_146_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_149(){
  if ( Filter_LessThan_8Ux8U_1U_4_138_out1.read() ) {
    Filter_N_Mux_8_2_0_4_149_out1 = Filter_N_Mux_8_2_0_4_137_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_149_out1 = (sc_uint<8> )s_reg_35.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_150(){
  if ( Filter_LessThan_8Ux8U_1U_4_148_out1.read() ) {
    Filter_N_Mux_8_2_0_4_150_out1 = s_reg_42.read();
  } else {
    Filter_N_Mux_8_2_0_4_150_out1 = Filter_N_Mux_8_2_0_4_146_out1.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_151
void Filter::Filter_LessThan_8Ux8U_1U_4_151(){
  Filter_LessThan_8Ux8U_1U_4_151_out1 = (/*imp*/sc_uint<1>)(s_reg_31.read() < 
                                        Filter_N_Mux_8_2_0_4_149_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_152(){
  if ( Filter_LessThan_8Ux8U_1U_4_151_out1.read() ) {
    Filter_N_Mux_8_2_0_4_152_out1 = s_reg_31.read();
  } else {
    Filter_N_Mux_8_2_0_4_152_out1 = Filter_N_Mux_8_2_0_4_149_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_153(){
  if ( Filter_LessThan_8Ux8U_1U_4_148_out1.read() ) {
    Filter_N_Mux_8_2_0_4_153_out1 = Filter_N_Mux_8_2_0_4_146_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_153_out1 = s_reg_42.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_154
void Filter::Filter_LessThan_8Ux8U_1U_4_154(){
  Filter_LessThan_8Ux8U_1U_4_154_out1 = (/*imp*/sc_uint<1>)(s_reg_49.read() < 
                                        Filter_N_Mux_8_2_0_4_152_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_155(){
  if ( Filter_LessThan_8Ux8U_1U_4_154_out1.read() ) {
    Filter_N_Mux_8_2_0_4_155_out1 = s_reg_49.read();
  } else {
    Filter_N_Mux_8_2_0_4_155_out1 = Filter_N_Mux_8_2_0_4_152_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_156(){
  if ( Filter_LessThan_8Ux8U_1U_4_151_out1.read() ) {
    Filter_N_Mux_8_2_0_4_156_out1 = Filter_N_Mux_8_2_0_4_149_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_156_out1 = s_reg_31.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_157(){
  if ( Filter_LessThan_8Ux8U_1U_4_154_out1.read() ) {
    Filter_N_Mux_8_2_0_4_157_out1 = Filter_N_Mux_8_2_0_4_152_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_157_out1 = s_reg_49.read();
  }
}
// resource: Filter_LessThan_8Ux8U_1U_4  instance: Filter_LessThan_8Ux8U_1U_4_158
void Filter::Filter_LessThan_8Ux8U_1U_4_158(){
  Filter_LessThan_8Ux8U_1U_4_158_out1 = (/*imp*/sc_uint<1>)(s_reg_50.read() < 
                                        Filter_N_Mux_8_2_0_4_156_out1.read());
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_159(){
  if ( Filter_LessThan_8Ux8U_1U_4_158_out1.read() ) {
    Filter_N_Mux_8_2_0_4_159_out1 = s_reg_50.read();
  } else {
    Filter_N_Mux_8_2_0_4_159_out1 = Filter_N_Mux_8_2_0_4_156_out1.read();
  }
}
// resource: Filter_N_Mux_8_2_0_4
void Filter::Filter_N_Mux_8_2_0_4_160(){
  if ( Filter_LessThan_8Ux8U_1U_4_158_out1.read() ) {
    Filter_N_Mux_8_2_0_4_160_out1 = Filter_N_Mux_8_2_0_4_156_out1.read();
  } else {
    Filter_N_Mux_8_2_0_4_160_out1 = s_reg_50.read();
  }
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_175
void Filter::Filter_Add_2Ux1U_2U_4_175(){
  Filter_Add_2Ux1U_2U_4_175_out1 = (s_reg_8.read() + 1ULL);
}
// resource: Filter_LessThan_2Ux2U_1U_4  instance: Filter_LessThan_2Ux2U_1U_4_178
void Filter::Filter_LessThan_2Ux2U_1U_4_178(){
  Filter_LessThan_2Ux2U_1U_4_178_out1 = (/*imp*/sc_uint<1>)(s_reg_8.read() < (
                                        sc_uint<2> )3ULL);
}
// resource: mux_4bx2i1c
void Filter::drive_Filter_Equal_4Ux3U_1U_4_182_in2(){
  if ( gs_ctrl_do_filter_h200000000000.read() ) {
    Filter_Equal_4Ux3U_1U_4_182_in2 = (sc_uint<4> )s_reg_17.read();
  } else {
    Filter_Equal_4Ux3U_1U_4_182_in2 = 0ULL;
  }
}
// resource: Filter_Equal_4Ux3U_1U_4  instance: Filter_Equal_4Ux3U_1U_4_182
void Filter::Filter_Equal_4Ux3U_1U_4_182(){
  Filter_Equal_4Ux3U_1U_4_182_out1 = (Filter_Equal_4Ux3U_1U_4_182_in2.read() == 
                                     4ULL);
}
// resource: Filter_NotEQ_4Ux3U_1U_4  instance: Filter_NotEQ_4Ux3U_1U_4_183
void Filter::Filter_NotEQ_4Ux3U_1U_4_183(){
  Filter_NotEQ_4Ux3U_1U_4_183_out1 = (Filter_Equal_4Ux3U_1U_4_182_in2.read() != 
                                     4ULL);
}
// resource: Filter_Equal_4Ux3U_1U_4  instance: Filter_Equal_4Ux3U_1U_4_185
void Filter::Filter_Equal_4Ux3U_1U_4_185(){
  Filter_Equal_4Ux3U_1U_4_185_out1 = ((sc_uint<4> )s_reg_17.read() == 4ULL);
}
// resource: Filter_Add_5Ux1U_5U_4  instance: Filter_Add_5Ux1U_5U_4_186
void Filter::Filter_Add_5Ux1U_5U_4_186(){
  Filter_Add_5Ux1U_5U_4_186_out1 = ((sc_uint<4> )s_reg_17.read() + 1ULL);
}
void Filter::drive_Filter_N_Mux_9_2_1_4_187_in2(){
  Filter_N_Mux_9_2_1_4_187_in2 = ( (sc_uint<9> )(sc_bv<9>)((sc_bv<8>)(box_out1
                                 .read()), 
                                 (sc_bv<1>)(0ULL)) );
}
// resource: Filter_N_Mux_9_2_1_4
void Filter::Filter_N_Mux_9_2_1_4_187(){
  if ( Filter_Equal_4Ux3U_1U_4_185_out1.read() ) {
    Filter_N_Mux_9_2_1_4_187_out1 = Filter_N_Mux_9_2_1_4_187_in2.read();
  } else {
    Filter_N_Mux_9_2_1_4_187_out1 = (sc_uint<9> )box_out1.read();
  }
}
// resource: Filter_LessThan_4Ux4U_1U_4  instance: Filter_LessThan_4Ux4U_1U_4_188
void Filter::Filter_LessThan_4Ux4U_1U_4_188(){
  Filter_LessThan_4Ux4U_1U_4_188_out1 = (/*imp*/sc_uint<1>)((sc_uint<4> )
                                        s_reg_17.read() < (sc_uint<4> )9ULL);
}
// resource: Filter_Add_12Ux9U_12U_4  instance: Filter_Add_12Ux9U_12U_4_189
void Filter::Filter_Add_12Ux9U_12U_4_189(){
  Filter_Add_12Ux9U_12U_4_189_out1 = (s_reg_35.read() + s_reg_33.read());
}
// resource: Filter_Sub_12Ux8U_12U_4  instance: Filter_Sub_12Ux8U_12U_4_190
void Filter::Filter_Sub_12Ux8U_12U_4_190(){
  Filter_Sub_12Ux8U_12U_4_190_out1 = Filter_Add_12Ux9U_12U_4_189_out1.read() - 
                                     s_reg_32.read();
}
void Filter::drive_Filter_Div_11Ux3U_11U_4_191_in2(){
  Filter_Div_11Ux3U_11U_4_191_in2 = (sc_uint<11> ) (
                                    Filter_Sub_12Ux8U_12U_4_190_out1.read()
                                    .range(11,1));
}
// resource: Filter_Div_11Ux3U_11U_4  instance: Filter_Div_11Ux3U_11U_4_191
void Filter::Filter_Div_11Ux3U_11U_4_191(){
  Filter_Div_11Ux3U_11U_4_191_out1 = ((sc_uint<3> )5ULL == 0 ? ((sc_uint<11> 
                                     ) -1) : (sc_uint<11> ) (
                                     Filter_Div_11Ux3U_11U_4_191_in2.read() / (
                                     sc_uint<3> )5ULL));
}
// resource: Filter_Add_2Ux1U_2U_4  instance: Filter_Add_2Ux1U_2U_4_192
void Filter::Filter_Add_2Ux1U_2U_4_192(){
  Filter_Add_2Ux1U_2U_4_192_out1 = (s_reg_8.read() + 1ULL);
}
// resource: Filter_LessThan_2Ux2U_1U_4  instance: Filter_LessThan_2Ux2U_1U_4_193
void Filter::Filter_LessThan_2Ux2U_1U_4_193(){
  Filter_LessThan_2Ux2U_1U_4_193_out1 = (/*imp*/sc_uint<1>)(s_reg_8.read() < (
                                        sc_uint<2> )3ULL);
}
// resource: regr_en_sc_6
void Filter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_6bx10i9c
void Filter::drive_global_state_next(){
  switch( (sc_uint<6>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 51ULL: 
    global_state_next = 1ULL;
    break;
  case 5ULL: 
    if ( s_reg_12.read() ) {
      global_state_next = 10ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 9ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_32_out1.read()) ) {
    default:
      global_state_next = 6ULL;
      break;
    case 3ULL: 
      if ( Filter_LessThan_2Ux2U_1U_4_33_out1.read() ) {
        global_state_next = 6ULL;
      } else {
        if ( Filter_LessThan_2Ux2U_1U_4_34_out1.read() ) {
          global_state_next = 1ULL;
        } else {
          global_state_next = 12ULL;
        }
      }
      break;
    }
    break;
  case 11ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_22_out1.read()) ) {
    default:
      global_state_next = 10ULL;
      break;
    case 3ULL: 
      if ( Filter_LessThan_2Ux2U_1U_4_26_out1.read() ) {
        global_state_next = 2ULL;
      } else {
        if ( Filter_LessThan_2Ux2U_1U_4_34_out1.read() ) {
          global_state_next = 1ULL;
        } else {
          global_state_next = (global_state.read() + 1ULL);
        }
      }
      break;
    }
    break;
  case 23ULL: 
    switch( (sc_uint<2>)(Filter_Add_2Ux1U_2U_4_58_out1.read()) ) {
    default:
      global_state_next = 12ULL;
      break;
    case 3ULL: 
      global_state_next = (global_state.read() + 1ULL);
      break;
    }
    break;
  case 41ULL: 
    if ( Filter_LessThan_2Ux2U_1U_4_178_out1.read() ) {
      global_state_next = 24ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 42ULL: case 45ULL: 
    global_state_next = 43ULL;
    break;
  case 44ULL: 
    if ( Filter_LessThan_4Ux4U_1U_4_188_out1.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      global_state_next = 46ULL;
    }
    break;
  case 46ULL: 
    if ( Filter_LessThan_2Ux2U_1U_4_193_out1.read() ) {
      global_state_next = 42ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void Filter::drive_gs_ctrl_do_filter_ha44(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_ha44 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_ha44 = 0ULL;
        break;
      case 2ULL: case 6ULL: 
        gs_ctrl_do_filter_ha44 = 1ULL;
        break;
      case 9ULL: case 11ULL: 
        gs_ctrl_do_filter_ha44 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void Filter::drive_gs_ctrl_do_filter_h1d00000000a00(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1d00000000a00 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1d00000000a00 = 0ULL;
        break;
      case 9ULL: case 11ULL: 
        gs_ctrl_do_filter_h1d00000000a00 = 1ULL;
        break;
      case 44ULL: 
        gs_ctrl_do_filter_h1d00000000a00 = 2ULL;
        break;
      case 46ULL: 
        gs_ctrl_do_filter_h1d00000000a00 = 3ULL;
        break;
      case 47ULL: 
        gs_ctrl_do_filter_h1d00000000a00 = 4ULL;
        break;
      case 48ULL: 
        gs_ctrl_do_filter_h1d00000000a00 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h100000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h100000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h100000000000 = 0ULL;
        break;
      case 44ULL: 
        gs_ctrl_do_filter_h100000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_ss_sc_3
void Filter::drive_gs_ctrl_do_filter_h9d20000000a01(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h9d20000000a01 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h9d20000000a01 = 0ULL;
        break;
      case 0ULL: case 46ULL: case 47ULL: case 48ULL: case 51ULL: 
        gs_ctrl_do_filter_h9d20000000a01 = 1ULL;
        break;
      case 9ULL: 
        gs_ctrl_do_filter_h9d20000000a01 = 2ULL;
        break;
      case 11ULL: 
        gs_ctrl_do_filter_h9d20000000a01 = 3ULL;
        break;
      case 41ULL: 
        gs_ctrl_do_filter_h9d20000000a01 = 4ULL;
        break;
      case 44ULL: 
        gs_ctrl_do_filter_h9d20000000a01 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx5i5c
// resource: regr_en_ss_sc_3
void Filter::drive_gs_ctrl_do_filter_h8100000000a01(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8100000000a01 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8100000000a01 = 0ULL;
        break;
      case 0ULL: case 51ULL: 
        gs_ctrl_do_filter_h8100000000a01 = 1ULL;
        break;
      case 9ULL: 
        gs_ctrl_do_filter_h8100000000a01 = 2ULL;
        break;
      case 11ULL: 
        gs_ctrl_do_filter_h8100000000a01 = 3ULL;
        break;
      case 44ULL: 
        gs_ctrl_do_filter_h8100000000a01 = 4ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx5i5c
// resource: regr_en_sc_3
void Filter::drive_gs_ctrl_do_filter_ha18(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_ha18 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_ha18 = 0ULL;
        break;
      case 3ULL: 
        gs_ctrl_do_filter_ha18 = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_ha18 = 2ULL;
        break;
      case 9ULL: 
        gs_ctrl_do_filter_ha18 = 3ULL;
        break;
      case 11ULL: 
        gs_ctrl_do_filter_ha18 = 4ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void Filter::drive_gs_ctrl_do_filter_h18(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h18 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h18 = 0ULL;
        break;
      case 3ULL: 
        gs_ctrl_do_filter_h18 = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_h18 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx5i5c
// resource: regr_en_sc_3
void Filter::drive_gs_ctrl_do_filter_ha3c(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_ha3c = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_ha3c = 0ULL;
        break;
      case 2ULL: case 3ULL: case 4ULL: 
        gs_ctrl_do_filter_ha3c = 1ULL;
        break;
      case 5ULL: 
        gs_ctrl_do_filter_ha3c = 2ULL;
        break;
      case 9ULL: 
        gs_ctrl_do_filter_ha3c = 3ULL;
        break;
      case 11ULL: 
        gs_ctrl_do_filter_ha3c = 4ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h1c(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1c = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1c = 0ULL;
        break;
      case 2ULL: case 3ULL: case 4ULL: 
        gs_ctrl_do_filter_h1c = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h200(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h200 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h200 = 0ULL;
        break;
      case 9ULL: 
        gs_ctrl_do_filter_h200 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h7e0080(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h7e0080 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h7e0080 = 0ULL;
        break;
      case 7ULL: case 17ULL: case 18ULL: case 19ULL: case 20ULL: case 21ULL: 
      case 22ULL: 
        gs_ctrl_do_filter_h7e0080 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void Filter::drive_gs_ctrl_do_filter_h67fffffffb80(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h67fffffffb80 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h67fffffffb80 = 0ULL;
        break;
      case 7ULL: case 8ULL: case 12ULL: case 13ULL: case 14ULL: case 15ULL: 
      case 16ULL: case 17ULL: case 18ULL: case 19ULL: case 20ULL: case 21ULL: 
      case 22ULL: case 24ULL: case 25ULL: case 26ULL: case 27ULL: case 28ULL: 
      case 29ULL: case 30ULL: case 31ULL: case 32ULL: case 33ULL: case 34ULL: 
      case 35ULL: case 36ULL: case 37ULL: case 38ULL: case 39ULL: case 40ULL: 
      case 42ULL: case 45ULL: case 46ULL: 
        gs_ctrl_do_filter_h67fffffffb80 = 1ULL;
        break;
      case 9ULL: 
        gs_ctrl_do_filter_h67fffffffb80 = 2ULL;
        break;
      case 11ULL: 
        gs_ctrl_do_filter_h67fffffffb80 = 3ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h67fffffffb80 = 4ULL;
        break;
      case 41ULL: 
        gs_ctrl_do_filter_h67fffffffb80 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx10i10c
// resource: regr_en_sc_4
void Filter::drive_gs_ctrl_do_filter_h27ffffbf0500(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h27ffffbf0500 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h27ffffbf0500 = 0ULL;
        break;
      case 8ULL: case 23ULL: case 24ULL: case 25ULL: case 26ULL: case 27ULL: 
      case 28ULL: case 29ULL: case 31ULL: case 33ULL: case 34ULL: case 35ULL: 
      case 36ULL: case 37ULL: case 38ULL: case 39ULL: case 40ULL: case 41ULL: 
      case 42ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 1ULL;
        break;
      case 10ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 2ULL;
        break;
      case 16ULL: case 21ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 3ULL;
        break;
      case 17ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 4ULL;
        break;
      case 18ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 5ULL;
        break;
      case 19ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 6ULL;
        break;
      case 20ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 7ULL;
        break;
      case 30ULL: case 32ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 8ULL;
        break;
      case 45ULL: 
        gs_ctrl_do_filter_h27ffffbf0500 = 9ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx11i11c
// resource: regr_en_sc_4
void Filter::drive_gs_ctrl_do_filter_h1ff00000100(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1ff00000100 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1ff00000100 = 0ULL;
        break;
      case 8ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 1ULL;
        break;
      case 32ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 2ULL;
        break;
      case 33ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 3ULL;
        break;
      case 34ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 4ULL;
        break;
      case 35ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 5ULL;
        break;
      case 36ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 6ULL;
        break;
      case 37ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 7ULL;
        break;
      case 38ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 8ULL;
        break;
      case 39ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 9ULL;
        break;
      case 40ULL: 
        gs_ctrl_do_filter_h1ff00000100 = 10ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx8i8c
// resource: regr_en_sc_3
void Filter::drive_gs_ctrl_do_filter_h27ffffbf0540(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h27ffffbf0540 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h27ffffbf0540 = 0ULL;
        break;
      case 6ULL: 
        gs_ctrl_do_filter_h27ffffbf0540 = 1ULL;
        break;
      case 8ULL: 
        gs_ctrl_do_filter_h27ffffbf0540 = 2ULL;
        break;
      case 10ULL: case 16ULL: case 17ULL: case 18ULL: case 19ULL: case 20ULL: 
      case 21ULL: case 24ULL: case 25ULL: case 26ULL: case 27ULL: case 28ULL: 
      case 29ULL: case 30ULL: case 31ULL: case 32ULL: case 33ULL: case 34ULL: 
      case 35ULL: case 36ULL: case 37ULL: case 38ULL: case 39ULL: case 40ULL: 
        gs_ctrl_do_filter_h27ffffbf0540 = 3ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h27ffffbf0540 = 4ULL;
        break;
      case 41ULL: 
        gs_ctrl_do_filter_h27ffffbf0540 = 5ULL;
        break;
      case 42ULL: 
        gs_ctrl_do_filter_h27ffffbf0540 = 6ULL;
        break;
      case 45ULL: 
        gs_ctrl_do_filter_h27ffffbf0540 = 7ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void Filter::drive_gs_ctrl_do_filter_h1ff00000540(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1ff00000540 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1ff00000540 = 0ULL;
        break;
      case 6ULL: 
        gs_ctrl_do_filter_h1ff00000540 = 1ULL;
        break;
      case 8ULL: 
        gs_ctrl_do_filter_h1ff00000540 = 2ULL;
        break;
      case 10ULL: case 32ULL: case 33ULL: case 34ULL: case 35ULL: case 36ULL: 
      case 37ULL: case 38ULL: case 39ULL: case 40ULL: 
        gs_ctrl_do_filter_h1ff00000540 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx12i12c
// resource: regr_en_sc_4
void Filter::drive_gs_ctrl_do_filter_h47febffdfb00(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h47febffdfb00 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h47febffdfb00 = 0ULL;
        break;
      case 8ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 1ULL;
        break;
      case 9ULL: case 11ULL: case 18ULL: case 24ULL: case 33ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 2ULL;
        break;
      case 12ULL: case 19ULL: case 25ULL: case 34ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 3ULL;
        break;
      case 13ULL: case 21ULL: case 36ULL: case 41ULL: case 46ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 4ULL;
        break;
      case 14ULL: case 22ULL: case 27ULL: case 37ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 5ULL;
        break;
      case 15ULL: case 29ULL: case 39ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 6ULL;
        break;
      case 16ULL: case 31ULL: case 40ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 7ULL;
        break;
      case 20ULL: case 26ULL: case 35ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 8ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 9ULL;
        break;
      case 28ULL: case 38ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 10ULL;
        break;
      case 42ULL: 
        gs_ctrl_do_filter_h47febffdfb00 = 11ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h20000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h20000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h20000 = 0ULL;
        break;
      case 17ULL: 
        gs_ctrl_do_filter_h20000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void Filter::drive_gs_ctrl_do_filter_h7e00800(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h7e00800 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h7e00800 = 0ULL;
        break;
      case 7ULL: 
        gs_ctrl_do_filter_h7e00800 = 1ULL;
        break;
      case 17ULL: case 18ULL: case 19ULL: case 20ULL: case 21ULL: case 22ULL: 
        gs_ctrl_do_filter_h7e00800 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h7e0000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h7e0000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h7e0000 = 0ULL;
        break;
      case 17ULL: case 18ULL: case 19ULL: case 20ULL: case 21ULL: case 22ULL: 
        gs_ctrl_do_filter_h7e0000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h20000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h20000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h20000000000 = 0ULL;
        break;
      case 41ULL: 
        gs_ctrl_do_filter_h20000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void Filter::drive_gs_ctrl_do_filter_h420001000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h420001000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h420001000000 = 0ULL;
        break;
      case 24ULL: 
        gs_ctrl_do_filter_h420001000000 = 1ULL;
        break;
      case 41ULL: 
        gs_ctrl_do_filter_h420001000000 = 2ULL;
        break;
      case 46ULL: 
        gs_ctrl_do_filter_h420001000000 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h1000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1000000 = 0ULL;
        break;
      case 24ULL: 
        gs_ctrl_do_filter_h1000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void Filter::drive_gs_ctrl_do_filter_h200000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h200000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h200000000000 = 0ULL;
        break;
      case 45ULL: 
        gs_ctrl_do_filter_h200000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
void Filter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) Filter_gen_busy_r_4_196_out1
               .read().range(2,2)));
}
// resource: Filter_gen_busy_r_4  instance: Filter_gen_busy_r_4_196
void Filter::Filter_gen_busy_r_4_196_p7(){
  Filter_gen_busy_r_4_196_out1 = (sc_uint<3> ) (( (sc_biguint<3> )(sc_bv<3>)(
                                 (sc_bv<1>)(Filter_gen_busy_r_4_196_gnew_req
                                 .read()), 
                                 (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                 (sc_bv<1>)(Filter_gen_busy_r_4_196_gdiv.read())
                                 , 
                                 (sc_bv<1>)(Filter_gen_busy_r_4_196_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next
                                 .read())) ))) ));
}
// resource: Filter_gen_busy_r_4  instance: Filter_gen_busy_r_4_196
void Filter::Filter_gen_busy_r_4_196_p6(){
  Filter_gen_busy_r_4_196_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)Filter_gen_busy_r_4_196_gdiv
                                                                        .read();
}
// resource: Filter_gen_busy_r_4  instance: Filter_gen_busy_r_4_196
void Filter::Filter_gen_busy_r_4_196_p5(){
  Filter_gen_busy_r_4_196_gdiv = (sc_uint<1> ) ((sc_uint<1> )i_rgb_vld.read() & 
                                 !Filter_gen_busy_r_4_196_gnew_req.read());
}
// resource: Filter_gen_busy_r_4  instance: Filter_gen_busy_r_4_196
void Filter::Filter_gen_busy_r_4_196_p4(){
  Filter_gen_busy_r_4_196_gnew_req = (sc_uint<1> ) ((sc_uint<1> )
                                     i_rgb_m_busy_req_0.read() & ( 
                                     i_rgb_m_unvalidated_req.read() | i_rgb_vld
                                     .read() ));
}
// resource: regr_ss_1
void Filter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (Filter_N_Muxb_1_2_2_4_4_out1.read()
                              );
  }
}
// resource: Filter_N_Muxb_1_2_2_4
void Filter::Filter_N_Muxb_1_2_2_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    Filter_N_Muxb_1_2_2_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req.read()
                                   );
  } else {
    Filter_N_Muxb_1_2_2_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
void Filter::drive_o_result_vld(){
  o_result_vld = (sc_uint<1> ) (Filter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: Filter_Or_1Ux1U_1U_4  instance: Filter_Or_1Ux1U_1U_4_2
void Filter::Filter_Or_1Ux1U_1U_4_2(){
  Filter_Or_1Ux1U_1U_4_2_out1 = (sc_uint<1> ) (o_result_m_unacked_req.read() | (
                                sc_uint<1>)Filter_Xor_1Ux1U_1U_1_1_out1.read());
}
// resource: regr_sc_1
void Filter::drive_o_result_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_unacked_req = 0ULL;
  } else {
    o_result_m_unacked_req = (sc_uint<1> ) (Filter_And_1Ux1U_1U_4_194_out1
                             .read());
  }
}
// resource: Filter_And_1Ux1U_1U_4  instance: Filter_And_1Ux1U_1U_4_194
void Filter::Filter_And_1Ux1U_1U_4_194(){
  Filter_And_1Ux1U_1U_4_194_out1 = (sc_uint<1> ) (o_result_busy.read() & 
                                   o_result_vld.read());
}
// resource: Filter_Xor_1Ux1U_1U_1  instance: Filter_Xor_1Ux1U_1U_1_1
void Filter::Filter_Xor_1Ux1U_1U_1_1(){
  Filter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_result_m_req_m_trig_req.read()
                                  ^ o_result_m_req_m_prev_trig_req.read());
}
// resource: regr_sc_1
void Filter::drive_o_result_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_result_m_req_m_prev_trig_req = o_result_m_req_m_trig_req.read();
  }
}
// resource: Filter_Not_1U_1U_1  instance: Filter_Not_1U_1U_1_3
void Filter::Filter_Not_1U_1U_1_3(){
  Filter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req.read();
}
